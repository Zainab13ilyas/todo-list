{"ast":null,"code":"import { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { addTodo, toggleTodo, deleteTodo, fetchTodosRequest, fetchTodosSuccess, fetchTodosFailure } from \"state/todos/TodoActions\";\nimport { setAlert, disableAlert } from \"state/todos/AlertActions\";\nimport Todos from \"components/Todo\";\nconst mapStateToProps = state => {\n  return {\n    todos: state.todo.todos,\n    alertValue: state.alert.popUpAlert\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    onAddTodo: addTodo,\n    onDeleteTodo: deleteTodo,\n    onToggleTodo: toggleTodo,\n    onSetAlert: setAlert,\n    onDisableAlert: disableAlert,\n    fetchTodosSuccess: fetchTodosSuccess,\n    fetchTodosFailure: fetchTodosFailure,\n    fetchTodos: fetchTodosRequest\n  }, dispatch);\n};\nconst TodosContainer = connect(mapStateToProps, mapDispatchToProps)(Todos);\nexport default TodosContainer;\n// End of File (EOF)","map":{"version":3,"names":["bindActionCreators","connect","addTodo","toggleTodo","deleteTodo","fetchTodosRequest","fetchTodosSuccess","fetchTodosFailure","setAlert","disableAlert","Todos","mapStateToProps","state","todos","todo","alertValue","alert","popUpAlert","mapDispatchToProps","dispatch","onAddTodo","onDeleteTodo","onToggleTodo","onSetAlert","onDisableAlert","fetchTodos","TodosContainer"],"sources":["/home/mergestack/todoapp/src/containers/TodoContainer.tsx"],"sourcesContent":["import { Dispatch, bindActionCreators } from \"redux\"\nimport { connect } from \"react-redux\";\nimport { RootState } from \"components/Constants\";\nimport {\n  addTodo,\n  toggleTodo,\n  deleteTodo,\n  fetchTodosRequest,\n  fetchTodosSuccess,\n  fetchTodosFailure,\n} from \"state/todos/TodoActions\";\nimport { setAlert, disableAlert } from \"state/todos/AlertActions\";\nimport Todos from \"components/Todo\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    todos: state.todo.todos,\n    alertValue: state.alert.popUpAlert,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return bindActionCreators(\n    {\n      onAddTodo: addTodo,\n      onDeleteTodo: deleteTodo,\n      onToggleTodo: toggleTodo,\n      onSetAlert: setAlert,\n      onDisableAlert: disableAlert,\n      fetchTodosSuccess: fetchTodosSuccess,\n      fetchTodosFailure: fetchTodosFailure,\n      fetchTodos: fetchTodosRequest\n    },\n    dispatch\n  );\n};\n\nconst TodosContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Todos);\n\nexport default TodosContainer;\n// End of File (EOF)\n"],"mappings":"AAAA,SAAmBA,kBAAkB,QAAQ,OAAO;AACpD,SAASC,OAAO,QAAQ,aAAa;AAErC,SACEC,OAAO,EACPC,UAAU,EACVC,UAAU,EACVC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAiB,QACZ,yBAAyB;AAChC,SAASC,QAAQ,EAAEC,YAAY,QAAQ,0BAA0B;AACjE,OAAOC,KAAK,MAAM,iBAAiB;AAEnC,MAAMC,eAAe,GAAIC,KAAgB,IAAK;EAC5C,OAAO;IACLC,KAAK,EAAED,KAAK,CAACE,IAAI,CAACD,KAAK;IACvBE,UAAU,EAAEH,KAAK,CAACI,KAAK,CAACC;EAC1B,CAAC;AACH,CAAC;AAED,MAAMC,kBAAkB,GAAIC,QAAkB,IAAK;EACjD,OAAOnB,kBAAkB,CACvB;IACEoB,SAAS,EAAElB,OAAO;IAClBmB,YAAY,EAAEjB,UAAU;IACxBkB,YAAY,EAAEnB,UAAU;IACxBoB,UAAU,EAAEf,QAAQ;IACpBgB,cAAc,EAAEf,YAAY;IAC5BH,iBAAiB,EAAEA,iBAAiB;IACpCC,iBAAiB,EAAEA,iBAAiB;IACpCkB,UAAU,EAAEpB;EACd,CAAC,EACDc,QACF,CAAC;AACH,CAAC;AAED,MAAMO,cAAc,GAAGzB,OAAO,CAC5BU,eAAe,EACfO,kBACF,CAAC,CAACR,KAAK,CAAC;AAER,eAAegB,cAAc;AAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}