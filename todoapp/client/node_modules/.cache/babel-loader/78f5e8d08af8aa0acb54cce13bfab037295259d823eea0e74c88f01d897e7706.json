{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { TodoActionTypes } from \"state/todos/TodoActions\";\nimport { crudAPI } from \"components/Constants\";\nfunction* fetchTodosSaga() {\n  console.log(\"fetch\");\n  try {\n    const response = yield call(axios.get, crudAPI);\n    const todos = response.data;\n    yield put({\n      type: TodoActionTypes.FETCH_TODOS_SUCCESS,\n      payload: {\n        todos\n      }\n    });\n  } catch (error) {\n    yield put({\n      type: TodoActionTypes.FETCH_TODOS_FAILURE,\n      payload: {\n        error: error.message\n      }\n    });\n  }\n}\nfunction* addTodoSaga(action) {\n  console.log(\"add\");\n  const newTodo = {\n    text: action.payload.text,\n    completed: false\n  };\n  try {\n    const response = yield call(axios.post, crudAPI, newTodo);\n    const createdTodo = response.data; // Assuming the API returns the newly created todo with its id\n    yield put({\n      type: TodoActionTypes.ADD_TODO_SUCCESS,\n      payload: {\n        todo: createdTodo\n      }\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\nfunction* deleteTodoSaga(action) {\n  try {\n    console.log(\"Fgdf\");\n    const {\n      id\n    } = action.payload;\n    yield call(axios.delete, `${crudAPI}/${id}`);\n    // yield put({ type: TodoActionTypes.DELETE_TODO, payload: { id } });\n  } catch (error) {\n    console.error(error);\n  }\n}\nfunction* updateTodoSaga(action) {\n  try {\n    const {\n      id,\n      completed,\n      text\n    } = action.payload;\n    const updatedTodo = {\n      completed,\n      text\n    };\n    yield call(axios.put, `${crudAPI}/${id}`, updatedTodo, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\nfunction* toggleTodoSaga(action) {\n  try {\n    const {\n      id,\n      completed,\n      text\n    } = action.payload;\n    const updatedTodo = {\n      completed: !completed,\n      text\n    };\n    console.log(updatedTodo);\n    yield call(axios.put, `${crudAPI}/${id}`, updatedTodo, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\nfunction* watchFetchTodos() {\n  yield takeLatest(TodoActionTypes.FETCH_TODOS_REQUEST, fetchTodosSaga);\n  yield takeLatest(TodoActionTypes.ADD_TODO, addTodoSaga);\n  yield takeLatest(TodoActionTypes.DELETE_TODO, deleteTodoSaga);\n  yield takeLatest(TodoActionTypes.EDIT_TODO, updateTodoSaga);\n  yield takeLatest(TodoActionTypes.TOGGLE_TODO, toggleTodoSaga);\n}\nexport function* todoSagas() {\n  yield watchFetchTodos();\n}\n// End of File (EOF)","map":{"version":3,"names":["call","put","takeLatest","axios","TodoActionTypes","crudAPI","fetchTodosSaga","console","log","response","get","todos","data","type","FETCH_TODOS_SUCCESS","payload","error","FETCH_TODOS_FAILURE","message","addTodoSaga","action","newTodo","text","completed","post","createdTodo","ADD_TODO_SUCCESS","todo","deleteTodoSaga","id","delete","updateTodoSaga","updatedTodo","headers","toggleTodoSaga","watchFetchTodos","FETCH_TODOS_REQUEST","ADD_TODO","DELETE_TODO","EDIT_TODO","TOGGLE_TODO","todoSagas"],"sources":["/home/mergestack/todoapp/src/state/todos/Sagas.tsx"],"sourcesContent":["\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { TodoActionTypes } from \"state/todos/TodoActions\"\nimport { Todo, crudAPI } from \"components/Constants\";\n\nfunction* fetchTodosSaga(): any {\n  console.log(\"fetch\")\n  try {\n    const response = yield call(axios.get, crudAPI);\n    const todos: Todo[] = response.data;\n    yield put({ type: TodoActionTypes.FETCH_TODOS_SUCCESS, payload: { todos } });\n  } catch (error: any) {\n    yield put({ type: TodoActionTypes.FETCH_TODOS_FAILURE, payload: { error: error.message } });\n  }\n}\n\nfunction* addTodoSaga(action: { type: string, payload: { text: string } }) {\n  console.log(\"add\")\n  const newTodo = {\n    text: action.payload.text,\n    completed: false,\n  };\n  try {\n    const response = yield call(axios.post, crudAPI, newTodo);\n    const createdTodo = response.data; // Assuming the API returns the newly created todo with its id\n    yield put({ type: TodoActionTypes.ADD_TODO_SUCCESS, payload: { todo: createdTodo } });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction* deleteTodoSaga(action: { type: string, payload: { id: string } }) {\n  try {\n    console.log(\"Fgdf\")\n    const { id } = action.payload;\n    yield call(axios.delete, `${crudAPI}/${id}`);\n    // yield put({ type: TodoActionTypes.DELETE_TODO, payload: { id } });\n  } catch (error: any) {\n    console.error(error)\n  }\n}\n\nfunction* updateTodoSaga(action: { type: string, payload: { id: string, text: string, completed: boolean } }) {\n  try {\n    const { id, completed, text } = action.payload;\n    const updatedTodo: Partial<Todo> = { completed, text }\n    yield call(axios.put, `${crudAPI}/${id}`, updatedTodo, {\n      headers: { 'Content-Type': 'application/json' }\n    });\n  } catch (error: any) {\n    console.error(error)\n  }\n\n}\nfunction* toggleTodoSaga(action: { type: string, payload: { id: string, text: string, completed: boolean } }) {\n  try {\n    const { id, completed, text } = action.payload;\n    const updatedTodo: Partial<Todo> = { completed: !completed, text }\n    console.log(updatedTodo)\n    yield call(axios.put, `${crudAPI}/${id}`, updatedTodo, {\n      headers: { 'Content-Type': 'application/json' }\n    });\n  } catch (error: any) {\n    console.error(error)\n  }\n\n}\n\nfunction* watchFetchTodos() {\n  yield takeLatest(TodoActionTypes.FETCH_TODOS_REQUEST, fetchTodosSaga);\n  yield takeLatest(TodoActionTypes.ADD_TODO, addTodoSaga);\n  yield takeLatest(TodoActionTypes.DELETE_TODO, deleteTodoSaga);\n  yield takeLatest(TodoActionTypes.EDIT_TODO, updateTodoSaga);\n  yield takeLatest(TodoActionTypes.TOGGLE_TODO, toggleTodoSaga);\n}\nexport function* todoSagas() {\n  yield watchFetchTodos();\n}\n// End of File (EOF)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}