{"ast":null,"code":"var _jsxFileName = \"/home/mergestack/todoapp/src/components/EditTodoModal.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { Box, Modal, TextField, Button } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { useHookstate } from '@hookstate/core';\nimport { crudAPI } from 'components/Constants';\nimport AlertModal from \"components/AlertModal\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  popUp: {\n    \"&&\": {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: 'white',\n      width: '300px',\n      p: '1rem',\n      borderRadius: '8px',\n      padding: 15\n    }\n  },\n  popUpButton: {\n    \"&&\": {\n      width: '100%',\n      backgroundColor: '#ff5252',\n      color: 'white',\n      '&:hover': {\n        backgroundColor: 'black',\n        color: 'white'\n      }\n    }\n  }\n});\nconst TodoModal = _ref => {\n  _s();\n  let {\n    todoId,\n    handleCloseModal,\n    onEditTodo,\n    onSetAlert,\n    onDisableAlert\n  } = _ref;\n  const classes = useStyles();\n  const text = useHookstate('');\n  useEffect(() => {\n    if (todos) {\n      const selectedTodo = todos.find(todo => todo._id === todoId);\n      if (selectedTodo) {\n        text.set(selectedTodo.text);\n      } else {\n        text.set('');\n        handleCloseModal();\n      }\n    }\n  }, [todoId, handleCloseModal]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleChange = value => {\n    text.set(value);\n  };\n  const handleUpdate = async () => {\n    const prevTodos = todos;\n    const updatedTodos = prevTodos.map(todo => todo._id === todoId ? {\n      ...todo,\n      text: text.get().trim()\n    } : todo);\n    const selectedTodo = updatedTodos.find(todo => todo._id === todoId);\n    if (prevTodos) {\n      if (prevTodos.find(todo => todo.text === (selectedTodo === null || selectedTodo === void 0 ? void 0 : selectedTodo.text) && todo._id !== selectedTodo._id)) {\n        onSetAlert();\n        return;\n      }\n      if (selectedTodo) {\n        onEditTodo(selectedTodo === null || selectedTodo === void 0 ? void 0 : selectedTodo._id, selectedTodo === null || selectedTodo === void 0 ? void 0 : selectedTodo.text);\n      }\n      if (selectedTodo) {\n        const {\n          completed,\n          text\n        } = selectedTodo;\n        const updatedTodo = {\n          completed,\n          text\n        };\n        try {\n          await axios.put(`${crudAPI}/${selectedTodo._id}`, updatedTodo);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n      handleCloseModal();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      open: Boolean(todoId),\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.popUp,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Edit Todo\",\n          variant: \"outlined\",\n          onChange: e => handleChange(e.target.value),\n          type: \"text\",\n          value: text.value,\n          sx: {\n            width: '100%',\n            mb: '1rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleUpdate,\n          className: classes.popUpButton,\n          children: \"Update Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), alertValue && /*#__PURE__*/_jsxDEV(AlertModal, {\n      onClose: () => onDisableAlert(),\n      alertValue: alertValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(TodoModal, \"tkE3gUV53CpBriLJUbW+9EnVI18=\", false, function () {\n  return [useStyles, useHookstate];\n});\n_c = TodoModal;\nexport default TodoModal;\n// End of File (EOF)\nvar _c;\n$RefreshReg$(_c, \"TodoModal\");","map":{"version":3,"names":["useEffect","Box","Modal","TextField","Button","makeStyles","useHookstate","crudAPI","AlertModal","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","popUp","position","top","left","transform","backgroundColor","width","p","borderRadius","padding","popUpButton","color","TodoModal","_ref","_s","todoId","handleCloseModal","onEditTodo","onSetAlert","onDisableAlert","classes","text","todos","selectedTodo","find","todo","_id","set","handleChange","value","handleUpdate","prevTodos","updatedTodos","map","get","trim","completed","updatedTodo","put","error","console","children","open","Boolean","onClose","className","label","variant","onChange","e","target","type","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","onClick","alertValue","_c","$RefreshReg$"],"sources":["/home/mergestack/todoapp/src/components/EditTodoModal.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { Box, Modal, TextField, Button } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { useHookstate } from '@hookstate/core';\nimport { crudAPI, Todo } from 'components/Constants';\nimport AlertModal from \"components/AlertModal\";\nimport axios from 'axios';\n\nconst useStyles = makeStyles({\n  popUp: {\n    \"&&\": {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: 'white',\n      width: '300px',\n      p: '1rem',\n      borderRadius: '8px',\n      padding: 15\n    }\n  },\n  popUpButton: {\n    \"&&\": {\n      width: '100%',\n      backgroundColor: '#ff5252',\n      color: 'white',\n      '&:hover': {\n        backgroundColor: 'black',\n        color: 'white',\n      },\n    }\n  },\n})\n\ntype TodoModalProps = {\n  todoId: string | null;\n  handleCloseModal: () => void;\n  onEditTodo: (id: string, text: string) => void;\n  onSetAlert: () => void;\n  onDisableAlert: () => void;\n};\n\nconst TodoModal = ({ todoId, handleCloseModal, onEditTodo, onSetAlert, onDisableAlert }: TodoModalProps) => {\n  const classes = useStyles();\n  const text = useHookstate('');\n\n  useEffect(() => {\n    if (todos) {\n      const selectedTodo = todos.find(todo => todo._id === todoId);\n      if (selectedTodo) {\n        text.set(selectedTodo.text)\n      } else {\n        text.set('')\n        handleCloseModal();\n      }\n    }\n  }, [todoId, handleCloseModal]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleChange = (value: string) => {\n    text.set(value);\n  };\n\n  const handleUpdate = async () => {\n    const prevTodos = todos;\n    const updatedTodos = prevTodos.map((todo) =>\n      todo._id === todoId ? { ...todo, text: text.get().trim() } : todo\n    );\n    const selectedTodo = updatedTodos.find((todo) => todo._id === todoId);\n\n    if (prevTodos) {\n      if (prevTodos.find((todo) => todo.text === selectedTodo?.text && todo._id !== selectedTodo._id)) {\n        onSetAlert()\n        return;\n      }\n      if (selectedTodo) {\n        onEditTodo(selectedTodo?._id, selectedTodo?.text)\n      }\n      if (selectedTodo) {\n        const { completed, text } = selectedTodo;\n        const updatedTodo: Partial<Todo> = { completed, text };\n        try {\n          await axios.put(`${crudAPI}/${selectedTodo._id}`, updatedTodo);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      handleCloseModal();\n    }\n  };\n\n  return (\n    <>\n      <Modal open={Boolean(todoId)} onClose={handleCloseModal}>\n        <Box className={classes.popUp} >\n          <TextField\n            label=\"Edit Todo\"\n            variant=\"outlined\"\n            onChange={(e) => handleChange(e.target.value)}\n            type=\"text\"\n            value={text.value}\n            sx={{ width: '100%', mb: '1rem' }}\n          />\n          <Button\n            variant=\"outlined\"\n            onClick={handleUpdate}\n            className={classes.popUpButton}\n          >\n            Update Todo\n          </Button>\n        </Box>\n      </Modal>\n\n      {alertValue && (\n        <AlertModal\n          onClose={() => onDisableAlert()}\n          alertValue={alertValue}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TodoModal;\n// End of File (EOF)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}