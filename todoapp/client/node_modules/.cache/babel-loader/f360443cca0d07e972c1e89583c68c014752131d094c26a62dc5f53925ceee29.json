{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport TodoModal from \"components/EditTodoModal\";\nimport { editTodo } from \"state/todos/TodoActions\";\nimport { setAlert, disableAlert } from \"state/todos/AlertActions\";\nconst TodoModalContainer = _ref => {\n  let {\n    todoId,\n    handleCloseModal\n  } = _ref;\n};\n_c = TodoModalContainer;\nconst mapStateToProps = state => {\n  return {\n    todos: state.todo.todos,\n    alertValue: state.alert.PopUpAlert\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    onEditTodo: editTodo,\n    onSetAlert: setAlert,\n    onDisableAlert: disableAlert\n  }, dispatch);\n};\nconst EditTodoModalContainer = connect(mapStateToProps, mapDispatchToProps)(TodoModal);\nexport default EditTodoModalContainer;\n// End of File (EOF)\nvar _c;\n$RefreshReg$(_c, \"TodoModalContainer\");","map":{"version":3,"names":["connect","bindActionCreators","TodoModal","editTodo","setAlert","disableAlert","TodoModalContainer","_ref","todoId","handleCloseModal","_c","mapStateToProps","state","todos","todo","alertValue","alert","PopUpAlert","mapDispatchToProps","dispatch","onEditTodo","onSetAlert","onDisableAlert","EditTodoModalContainer","$RefreshReg$"],"sources":["/home/mergestack/todoapp/src/containers/EditTodoModalContainer.tsx"],"sourcesContent":["import { useDispatch, useSelector, connect } from \"react-redux\";\nimport { Dispatch, bindActionCreators } from \"redux\"\nimport { RootState } from \"components/Constants\";\nimport TodoModal from \"components/EditTodoModal\";\nimport { editTodo } from \"state/todos/TodoActions\";\nimport { setAlert, disableAlert } from \"state/todos/AlertActions\";\n\ntype TodoModalContainerProps = {\n  todoId: string | null;\n  handleCloseModal: () => void;\n}\nconst TodoModalContainer = ({ todoId, handleCloseModal }: TodoModalContainerProps) => {\n}\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    todos: state.todo.todos,\n    alertValue: state.alert.PopUpAlert,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return bindActionCreators(\n    {\n      onEditTodo: editTodo,\n      onSetAlert: setAlert,\n      onDisableAlert: disableAlert,\n    },\n    dispatch\n  );\n};\n\nconst EditTodoModalContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TodoModal);\n\nexport default EditTodoModalContainer;\n// End of File (EOF)\n"],"mappings":"AAAA,SAAmCA,OAAO,QAAQ,aAAa;AAC/D,SAAmBC,kBAAkB,QAAQ,OAAO;AAEpD,OAAOC,SAAS,MAAM,0BAA0B;AAChD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,QAAQ,EAAEC,YAAY,QAAQ,0BAA0B;AAMjE,MAAMC,kBAAkB,GAAGC,IAAA,IAA2D;EAAA,IAA1D;IAAEC,MAAM;IAAEC;EAA0C,CAAC,GAAAF,IAAA;AACjF,CAAC;AAAAG,EAAA,GADKJ,kBAAkB;AAGxB,MAAMK,eAAe,GAAIC,KAAgB,IAAK;EAC5C,OAAO;IACLC,KAAK,EAAED,KAAK,CAACE,IAAI,CAACD,KAAK;IACvBE,UAAU,EAAEH,KAAK,CAACI,KAAK,CAACC;EAC1B,CAAC;AACH,CAAC;AAED,MAAMC,kBAAkB,GAAIC,QAAkB,IAAK;EACjD,OAAOlB,kBAAkB,CACvB;IACEmB,UAAU,EAAEjB,QAAQ;IACpBkB,UAAU,EAAEjB,QAAQ;IACpBkB,cAAc,EAAEjB;EAClB,CAAC,EACDc,QACF,CAAC;AACH,CAAC;AAED,MAAMI,sBAAsB,GAAGvB,OAAO,CACpCW,eAAe,EACfO,kBACF,CAAC,CAAChB,SAAS,CAAC;AAEZ,eAAeqB,sBAAsB;AACrC;AAAA,IAAAb,EAAA;AAAAc,YAAA,CAAAd,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}