{"ast":null,"code":"var _jsxFileName = \"/home/mergestack/todoapp/src/components/AlertModal.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Modal, Typography, Button } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { useGlobalAlertState } from \"store/AlertStateStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  popUp: {\n    \"&&\": {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: 'white',\n      width: '300px',\n      p: '1rem',\n      borderRadius: '8px',\n      padding: 15\n    }\n  },\n  popUpButton: {\n    \"&&\": {\n      width: '100%',\n      backgroundColor: '#ff5252',\n      color: 'white',\n      '&:hover': {\n        backgroundColor: 'black',\n        color: 'white'\n      }\n    }\n  },\n  subheadings: {\n    \"&&\": {\n      marginLeft: '60px',\n      mb: '15px',\n      fontWeight: 'bold'\n    }\n  },\n  headings: {\n    \"&&\": {\n      marginLeft: '120px',\n      mb: '15px',\n      fontWeight: 'bold'\n    }\n  }\n});\nconst AlertModal = _ref => {\n  _s();\n  let {\n    onClose\n  } = _ref;\n  const classes = useStyles();\n  const showAlert = useGlobalAlertState();\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: showAlert.getValue(),\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.popUp,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: classes.headings,\n        children: \"Alert!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        className: classes.subheadings,\n        children: \"This task already exists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        className: classes.popUpButton,\n        onClick: onClose,\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(AlertModal, \"oV/H4ppXWE7vzvCsaZTHq+jj0h4=\", false, function () {\n  return [useStyles, useGlobalAlertState];\n});\n_c = AlertModal;\nexport default AlertModal;\n// End of File (EOF)\nvar _c;\n$RefreshReg$(_c, \"AlertModal\");","map":{"version":3,"names":["Box","Modal","Typography","Button","makeStyles","useGlobalAlertState","jsxDEV","_jsxDEV","useStyles","popUp","position","top","left","transform","backgroundColor","width","p","borderRadius","padding","popUpButton","color","subheadings","marginLeft","mb","fontWeight","headings","AlertModal","_ref","_s","onClose","classes","showAlert","open","getValue","children","className","variant","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/mergestack/todoapp/src/components/AlertModal.tsx"],"sourcesContent":["import { Box, Modal, Typography, Button } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { useGlobalAlertState } from \"store/AlertStateStore\";\n\nconst useStyles = makeStyles({\n  popUp: {\n    \"&&\": {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: 'white',\n      width: '300px',\n      p: '1rem',\n      borderRadius: '8px',\n      padding: 15\n    }\n  },\n  popUpButton: {\n    \"&&\": {\n      width: '100%',\n      backgroundColor: '#ff5252',\n      color: 'white',\n      '&:hover': {\n        backgroundColor: 'black',\n        color: 'white',\n      },\n    }\n  },\n  subheadings: {\n    \"&&\": {\n      marginLeft: '60px',\n      mb: '15px',\n      fontWeight: 'bold',\n    }\n  },\n  headings: {\n    \"&&\": {\n      marginLeft: '120px',\n      mb: '15px',\n      fontWeight: 'bold',\n    }\n  },\n})\n\ntype AlertModalProps = {\n  onClose: () => void;\n};\nconst AlertModal = ({ onClose }: AlertModalProps) => {\n  const classes = useStyles();\n  const showAlert = useGlobalAlertState();\n\n  return (\n    < Modal open={showAlert.getValue()} onClose={onClose} >\n      <Box className={classes.popUp} >\n        <Typography variant=\"h6\"\n          className={classes.headings}\n        >Alert!</Typography>\n        <Typography\n          variant=\"subtitle1\"\n          className={classes.subheadings}>\n          This task already exists\n        </Typography>\n        <Button\n          variant=\"outlined\"\n          className={classes.popUpButton}\n          onClick={onClose}\n        >\n          OK\n        </Button>\n      </Box>\n    </Modal >\n  );\n};\n\nexport default AlertModal;\n// End of File (EOF)\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,KAAK,EAAEC,UAAU,EAAEC,MAAM,QAAQ,eAAe;AAC9D,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,mBAAmB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,SAAS,GAAGJ,UAAU,CAAC;EAC3BK,KAAK,EAAE;IACL,IAAI,EAAE;MACJC,QAAQ,EAAE,UAAU;MACpBC,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE,uBAAuB;MAClCC,eAAe,EAAE,OAAO;MACxBC,KAAK,EAAE,OAAO;MACdC,CAAC,EAAE,MAAM;MACTC,YAAY,EAAE,KAAK;MACnBC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,WAAW,EAAE;IACX,IAAI,EAAE;MACJJ,KAAK,EAAE,MAAM;MACbD,eAAe,EAAE,SAAS;MAC1BM,KAAK,EAAE,OAAO;MACd,SAAS,EAAE;QACTN,eAAe,EAAE,OAAO;QACxBM,KAAK,EAAE;MACT;IACF;EACF,CAAC;EACDC,WAAW,EAAE;IACX,IAAI,EAAE;MACJC,UAAU,EAAE,MAAM;MAClBC,EAAE,EAAE,MAAM;MACVC,UAAU,EAAE;IACd;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,IAAI,EAAE;MACJH,UAAU,EAAE,OAAO;MACnBC,EAAE,EAAE,MAAM;MACVC,UAAU,EAAE;IACd;EACF;AACF,CAAC,CAAC;AAKF,MAAME,UAAU,GAAGC,IAAA,IAAkC;EAAAC,EAAA;EAAA,IAAjC;IAAEC;EAAyB,CAAC,GAAAF,IAAA;EAC9C,MAAMG,OAAO,GAAGtB,SAAS,CAAC,CAAC;EAC3B,MAAMuB,SAAS,GAAG1B,mBAAmB,CAAC,CAAC;EAEvC,oBACEE,OAAA,CAAEN,KAAK;IAAC+B,IAAI,EAAED,SAAS,CAACE,QAAQ,CAAC,CAAE;IAACJ,OAAO,EAAEA,OAAQ;IAAAK,QAAA,eACnD3B,OAAA,CAACP,GAAG;MAACmC,SAAS,EAAEL,OAAO,CAACrB,KAAM;MAAAyB,QAAA,gBAC5B3B,OAAA,CAACL,UAAU;QAACkC,OAAO,EAAC,IAAI;QACtBD,SAAS,EAAEL,OAAO,CAACL,QAAS;QAAAS,QAAA,EAC7B;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACpBjC,OAAA,CAACL,UAAU;QACTkC,OAAO,EAAC,WAAW;QACnBD,SAAS,EAAEL,OAAO,CAACT,WAAY;QAAAa,QAAA,EAAC;MAElC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbjC,OAAA,CAACJ,MAAM;QACLiC,OAAO,EAAC,UAAU;QAClBD,SAAS,EAAEL,OAAO,CAACX,WAAY;QAC/BsB,OAAO,EAAEZ,OAAQ;QAAAK,QAAA,EAClB;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACZ,EAAA,CAzBIF,UAAU;EAAA,QACElB,SAAS,EACPH,mBAAmB;AAAA;AAAAqC,EAAA,GAFjChB,UAAU;AA2BhB,eAAeA,UAAU;AACzB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}