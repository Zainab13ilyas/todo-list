{"ast":null,"code":"var _jsxFileName = \"/home/mergestack/todoapp/src/containers/TodoContainer.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { addTodo, toggleTodo, deleteTodo, fetchTodosRequest, fetchTodosSuccess, fetchTodosFailure, fetchTodos } from \"state/todos/TodoActions\";\nimport { setAlert, disableAlert } from \"state/todos/AlertActions\";\nimport Todos from \"components/Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/*const TodosContainer = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector((state: RootState) => state.todo.todos);\n  const alertValue = useSelector((state: RootState) => state.alert.PopUpAlert);\n\n  useEffect(() => {\n    dispatch(fetchTodosRequest());\n    fetchTodos();\n  }, [dispatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get(crudAPI);\n      const todos = response.data;\n      dispatch(fetchTodosSuccess(todos));\n    } catch (error: any) {\n      console.error(error);\n      dispatch(fetchTodosFailure(error.message));\n    }\n  };\n\n  const handleAddTodo = (id: string, text: string) => {\n    dispatch(addTodo(id, text));\n    fetchTodos()\n  };\n\n  const handleDeleteTodo = (id: string) => {\n    dispatch(deleteTodo(id));\n    fetchTodos()\n  };\n\n  const handleToggleTodo = (id: string) => {\n    dispatch(toggleTodo(id));\n    fetchTodos()\n  };\n\n  const handleSetAlert = () => {\n    dispatch(setAlert());\n  }\n\n  const handleDisableAlert = () => {\n    dispatch(disableAlert());\n  }\n\n\n  return (\n    <Todos\n      todos={todos}\n      onAddTodo={handleAddTodo}\n      onDeleteTodo={handleDeleteTodo}\n      onToggleTodo={handleToggleTodo}\n      alertValue={alertValue}\n      onSetAlert={handleSetAlert}\n      onDisableAlert={handleDisableAlert}\n    />\n  );\n};\n\nexport default TodosContainer;\n// End of File (EOF)\n*/\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todo.todos,\n    alertValue: state.alert.PopUpAlert\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    onAddTodo: addTodo,\n    onDeleteTodo: deleteTodo,\n    onToggleTodo: toggleTodo,\n    onSetAlert: setAlert,\n    onDisableAlert: disableAlert,\n    fetchTodosRequest: fetchTodosRequest,\n    fetchTodosSuccess: fetchTodosSuccess,\n    fetchTodosFailure: fetchTodosFailure,\n    fetchTodos\n  }, dispatch);\n};\n\n/*const TodosContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Todos);\n\nexport default TodosContainer;\n// End of File (EOF)\n*/\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nconst TodosContainer = props => {\n  _s();\n  const {\n    fetchTodos\n  } = props;\n  useEffect(() => {\n    fetchTodos();\n  }, [fetchTodos]);\n  return /*#__PURE__*/_jsxDEV(Todos, {\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 10\n  }, this);\n};\n_s(TodosContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TodosContainer;\nexport default _c2 = connector(TodosContainer);\nvar _c, _c2;\n$RefreshReg$(_c, \"TodosContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["useEffect","bindActionCreators","connect","addTodo","toggleTodo","deleteTodo","fetchTodosRequest","fetchTodosSuccess","fetchTodosFailure","fetchTodos","setAlert","disableAlert","Todos","jsxDEV","_jsxDEV","mapStateToProps","state","todos","todo","alertValue","alert","PopUpAlert","mapDispatchToProps","dispatch","onAddTodo","onDeleteTodo","onToggleTodo","onSetAlert","onDisableAlert","connector","TodosContainer","props","_s","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["/home/mergestack/todoapp/src/containers/TodoContainer.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { Dispatch, bindActionCreators } from \"redux\"\nimport { useDispatch, useSelector, connect, ConnectedProps } from \"react-redux\";\nimport { RootState, crudAPI } from \"components/Constants\";\nimport {\n  addTodo,\n  toggleTodo,\n  deleteTodo,\n  fetchTodosRequest,\n  fetchTodosSuccess,\n  fetchTodosFailure,\n  fetchTodos\n} from \"state/todos/TodoActions\";\nimport { setAlert, disableAlert } from \"state/todos/AlertActions\";\nimport Todos from \"components/Todo\";\nimport axios from \"axios\";\n\n/*const TodosContainer = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector((state: RootState) => state.todo.todos);\n  const alertValue = useSelector((state: RootState) => state.alert.PopUpAlert);\n\n  useEffect(() => {\n    dispatch(fetchTodosRequest());\n    fetchTodos();\n  }, [dispatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get(crudAPI);\n      const todos = response.data;\n      dispatch(fetchTodosSuccess(todos));\n    } catch (error: any) {\n      console.error(error);\n      dispatch(fetchTodosFailure(error.message));\n    }\n  };\n\n  const handleAddTodo = (id: string, text: string) => {\n    dispatch(addTodo(id, text));\n    fetchTodos()\n  };\n\n  const handleDeleteTodo = (id: string) => {\n    dispatch(deleteTodo(id));\n    fetchTodos()\n  };\n\n  const handleToggleTodo = (id: string) => {\n    dispatch(toggleTodo(id));\n    fetchTodos()\n  };\n\n  const handleSetAlert = () => {\n    dispatch(setAlert());\n  }\n\n  const handleDisableAlert = () => {\n    dispatch(disableAlert());\n  }\n\n\n  return (\n    <Todos\n      todos={todos}\n      onAddTodo={handleAddTodo}\n      onDeleteTodo={handleDeleteTodo}\n      onToggleTodo={handleToggleTodo}\n      alertValue={alertValue}\n      onSetAlert={handleSetAlert}\n      onDisableAlert={handleDisableAlert}\n    />\n  );\n};\n\nexport default TodosContainer;\n// End of File (EOF)\n*/\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    todos: state.todo.todos,\n    alertValue: state.alert.PopUpAlert,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return bindActionCreators(\n    {\n      onAddTodo: addTodo,\n      onDeleteTodo: deleteTodo,\n      onToggleTodo: toggleTodo,\n      onSetAlert: setAlert,\n      onDisableAlert: disableAlert,\n      fetchTodosRequest: fetchTodosRequest,\n      fetchTodosSuccess: fetchTodosSuccess,\n      fetchTodosFailure: fetchTodosFailure,\n      fetchTodos\n    },\n    dispatch\n  );\n};\n\n/*const TodosContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Todos);\n\nexport default TodosContainer;\n// End of File (EOF)\n*/\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst TodosContainer = (props: PropsFromRedux) => {\n  const { fetchTodos } = props;\n\n  useEffect(() => {\n    fetchTodos();\n  }, [fetchTodos]);\n\n  return <Todos {...props} />;\n};\n\nexport default connector(TodosContainer);\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAAmBC,kBAAkB,QAAQ,OAAO;AACpD,SAAmCC,OAAO,QAAwB,aAAa;AAE/E,SACEC,OAAO,EACPC,UAAU,EACVC,UAAU,EACVC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAU,QACL,yBAAyB;AAChC,SAASC,QAAQ,EAAEC,YAAY,QAAQ,0BAA0B;AACjE,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAIC,KAAgB,IAAK;EAC5C,OAAO;IACLC,KAAK,EAAED,KAAK,CAACE,IAAI,CAACD,KAAK;IACvBE,UAAU,EAAEH,KAAK,CAACI,KAAK,CAACC;EAC1B,CAAC;AACH,CAAC;AAED,MAAMC,kBAAkB,GAAIC,QAAkB,IAAK;EACjD,OAAOtB,kBAAkB,CACvB;IACEuB,SAAS,EAAErB,OAAO;IAClBsB,YAAY,EAAEpB,UAAU;IACxBqB,YAAY,EAAEtB,UAAU;IACxBuB,UAAU,EAAEjB,QAAQ;IACpBkB,cAAc,EAAEjB,YAAY;IAC5BL,iBAAiB,EAAEA,iBAAiB;IACpCC,iBAAiB,EAAEA,iBAAiB;IACpCC,iBAAiB,EAAEA,iBAAiB;IACpCC;EACF,CAAC,EACDc,QACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMM,SAAS,GAAG3B,OAAO,CAACa,eAAe,EAAEO,kBAAkB,CAAC;AAI9D,MAAMQ,cAAc,GAAIC,KAAqB,IAAK;EAAAC,EAAA;EAChD,MAAM;IAAEvB;EAAW,CAAC,GAAGsB,KAAK;EAE5B/B,SAAS,CAAC,MAAM;IACdS,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,oBAAOK,OAAA,CAACF,KAAK;IAAA,GAAKmB;EAAK;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAC7B,CAAC;AAACJ,EAAA,CARIF,cAAc;AAAAO,EAAA,GAAdP,cAAc;AAUpB,eAAAQ,GAAA,GAAeT,SAAS,CAACC,cAAc,CAAC;AAAC,IAAAO,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}