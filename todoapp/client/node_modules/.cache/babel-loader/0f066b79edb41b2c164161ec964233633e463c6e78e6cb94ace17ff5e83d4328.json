{"ast":null,"code":"import { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { addTodo, toggleTodo, deleteTodo, fetchTodosRequest, fetchTodosSuccess, fetchTodosFailure, fetchTodos } from \"state/todos/TodoActions\";\nimport { setAlert, disableAlert } from \"state/todos/AlertActions\";\nimport Todos from \"components/Todo\";\n/*const TodosContainer = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector((state: RootState) => state.todo.todos);\n  const alertValue = useSelector((state: RootState) => state.alert.PopUpAlert);\n\n  useEffect(() => {\n    dispatch(fetchTodosRequest());\n    fetchTodos();\n  }, [dispatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get(crudAPI);\n      const todos = response.data;\n      dispatch(fetchTodosSuccess(todos));\n    } catch (error: any) {\n      console.error(error);\n      dispatch(fetchTodosFailure(error.message));\n    }\n  };\n\n  const handleAddTodo = (id: string, text: string) => {\n    dispatch(addTodo(id, text));\n    fetchTodos()\n  };\n\n  const handleDeleteTodo = (id: string) => {\n    dispatch(deleteTodo(id));\n    fetchTodos()\n  };\n\n  const handleToggleTodo = (id: string) => {\n    dispatch(toggleTodo(id));\n    fetchTodos()\n  };\n\n  const handleSetAlert = () => {\n    dispatch(setAlert());\n  }\n\n  const handleDisableAlert = () => {\n    dispatch(disableAlert());\n  }\n\n\n  return (\n    <Todos\n      todos={todos}\n      onAddTodo={handleAddTodo}\n      onDeleteTodo={handleDeleteTodo}\n      onToggleTodo={handleToggleTodo}\n      alertValue={alertValue}\n      onSetAlert={handleSetAlert}\n      onDisableAlert={handleDisableAlert}\n    />\n  );\n};\n\nexport default TodosContainer;\n// End of File (EOF)\n*/\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todo.todos,\n    alertValue: state.alert.PopUpAlert\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    onAddTodo: addTodo,\n    onDeleteTodo: deleteTodo,\n    onToggleTodo: toggleTodo,\n    onSetAlert: setAlert,\n    onDisableAlert: disableAlert,\n    fetchTodosRequest: fetchTodosRequest,\n    fetchTodosSuccess: fetchTodosSuccess,\n    fetchTodosFailure: fetchTodosFailure,\n    fetchTodos: fetchTodos\n  }, dispatch);\n};\nconst TodosContainer = connect(mapStateToProps, mapDispatchToProps)(Todos);\nexport default TodosContainer;\n// End of File (EOF)","map":{"version":3,"names":["bindActionCreators","connect","addTodo","toggleTodo","deleteTodo","fetchTodosRequest","fetchTodosSuccess","fetchTodosFailure","fetchTodos","setAlert","disableAlert","Todos","mapStateToProps","state","todos","todo","alertValue","alert","PopUpAlert","mapDispatchToProps","dispatch","onAddTodo","onDeleteTodo","onToggleTodo","onSetAlert","onDisableAlert","TodosContainer"],"sources":["/home/mergestack/todoapp/src/containers/TodoContainer.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { Dispatch, bindActionCreators } from \"redux\"\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport { RootState, crudAPI } from \"components/Constants\";\nimport {\n  addTodo,\n  toggleTodo,\n  deleteTodo,\n  fetchTodosRequest,\n  fetchTodosSuccess,\n  fetchTodosFailure,\n  fetchTodos\n} from \"state/todos/TodoActions\";\nimport { setAlert, disableAlert } from \"state/todos/AlertActions\";\nimport Todos from \"components/Todo\";\nimport axios from \"axios\";\n\n/*const TodosContainer = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector((state: RootState) => state.todo.todos);\n  const alertValue = useSelector((state: RootState) => state.alert.PopUpAlert);\n\n  useEffect(() => {\n    dispatch(fetchTodosRequest());\n    fetchTodos();\n  }, [dispatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get(crudAPI);\n      const todos = response.data;\n      dispatch(fetchTodosSuccess(todos));\n    } catch (error: any) {\n      console.error(error);\n      dispatch(fetchTodosFailure(error.message));\n    }\n  };\n\n  const handleAddTodo = (id: string, text: string) => {\n    dispatch(addTodo(id, text));\n    fetchTodos()\n  };\n\n  const handleDeleteTodo = (id: string) => {\n    dispatch(deleteTodo(id));\n    fetchTodos()\n  };\n\n  const handleToggleTodo = (id: string) => {\n    dispatch(toggleTodo(id));\n    fetchTodos()\n  };\n\n  const handleSetAlert = () => {\n    dispatch(setAlert());\n  }\n\n  const handleDisableAlert = () => {\n    dispatch(disableAlert());\n  }\n\n\n  return (\n    <Todos\n      todos={todos}\n      onAddTodo={handleAddTodo}\n      onDeleteTodo={handleDeleteTodo}\n      onToggleTodo={handleToggleTodo}\n      alertValue={alertValue}\n      onSetAlert={handleSetAlert}\n      onDisableAlert={handleDisableAlert}\n    />\n  );\n};\n\nexport default TodosContainer;\n// End of File (EOF)\n*/\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    todos: state.todo.todos,\n    alertValue: state.alert.PopUpAlert,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return bindActionCreators(\n    {\n      onAddTodo: addTodo,\n      onDeleteTodo: deleteTodo,\n      onToggleTodo: toggleTodo,\n      onSetAlert: setAlert,\n      onDisableAlert: disableAlert,\n      fetchTodosRequest: fetchTodosRequest,\n      fetchTodosSuccess: fetchTodosSuccess,\n      fetchTodosFailure: fetchTodosFailure,\n      fetchTodos: fetchTodos\n    },\n    dispatch\n  );\n};\n\nconst TodosContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Todos);\n\nexport default TodosContainer;\n// End of File (EOF)\n"],"mappings":"AACA,SAAmBA,kBAAkB,QAAQ,OAAO;AACpD,SAAmCC,OAAO,QAAQ,aAAa;AAE/D,SACEC,OAAO,EACPC,UAAU,EACVC,UAAU,EACVC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAU,QACL,yBAAyB;AAChC,SAASC,QAAQ,EAAEC,YAAY,QAAQ,0BAA0B;AACjE,OAAOC,KAAK,MAAM,iBAAiB;AAGnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAIC,KAAgB,IAAK;EAC5C,OAAO;IACLC,KAAK,EAAED,KAAK,CAACE,IAAI,CAACD,KAAK;IACvBE,UAAU,EAAEH,KAAK,CAACI,KAAK,CAACC;EAC1B,CAAC;AACH,CAAC;AAED,MAAMC,kBAAkB,GAAIC,QAAkB,IAAK;EACjD,OAAOpB,kBAAkB,CACvB;IACEqB,SAAS,EAAEnB,OAAO;IAClBoB,YAAY,EAAElB,UAAU;IACxBmB,YAAY,EAAEpB,UAAU;IACxBqB,UAAU,EAAEf,QAAQ;IACpBgB,cAAc,EAAEf,YAAY;IAC5BL,iBAAiB,EAAEA,iBAAiB;IACpCC,iBAAiB,EAAEA,iBAAiB;IACpCC,iBAAiB,EAAEA,iBAAiB;IACpCC,UAAU,EAAEA;EACd,CAAC,EACDY,QACF,CAAC;AACH,CAAC;AAED,MAAMM,cAAc,GAAGzB,OAAO,CAC5BW,eAAe,EACfO,kBACF,CAAC,CAACR,KAAK,CAAC;AAER,eAAee,cAAc;AAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}