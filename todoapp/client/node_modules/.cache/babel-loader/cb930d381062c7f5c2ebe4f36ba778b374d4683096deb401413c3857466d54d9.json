{"ast":null,"code":"var _jsxFileName = \"/home/mergestack/todoapp/src/components/EditTodoModal.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Box, Modal, TextField, Button } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { useGlobalState } from 'store/TodoStore';\nimport { useHookstate } from '@hookstate/core';\nimport { crudAPI } from 'components/Constants';\nimport AlertModal from \"./AlertModal\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  popUp: {\n    \"&&\": {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: 'white',\n      width: '300px',\n      p: '1rem',\n      borderRadius: '8px',\n      padding: 15\n    }\n  },\n  popUpButton: {\n    \"&&\": {\n      width: '100%',\n      backgroundColor: '#ff5252',\n      color: 'white',\n      '&:hover': {\n        backgroundColor: 'black',\n        color: 'white'\n      }\n    }\n  }\n});\nconst TodoModal = _ref => {\n  _s();\n  let {\n    todoId,\n    handleCloseModal\n  } = _ref;\n  const classes = useStyles();\n  const {\n    tasksList\n  } = useGlobalState();\n  const text = useHookstate('');\n  const [showAlert, setShowAlert] = useState(false);\n  useEffect(() => {\n    if (tasksList.value) {\n      const selectedTodo = tasksList.value.find(todo => todo._id === todoId);\n      if (selectedTodo) {\n        text.set(selectedTodo.text);\n      } else {\n        text.set('');\n        handleCloseModal();\n      }\n    }\n  }, [todoId, handleCloseModal]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleChange = value => {\n    text.set(value);\n  };\n  const handleUpdate = async () => {\n    const prevTodos = tasksList.get({\n      noproxy: true\n    });\n    const updatedTodos = prevTodos.map(todo => todo._id === todoId ? {\n      ...todo,\n      text: text.get().trim()\n    } : todo);\n    const selectedTodo = updatedTodos.find(todo => todo._id === todoId);\n    if (prevTodos) {\n      if (prevTodos.find(todo => todo.text === text.get() && (selectedTodo === null || selectedTodo === void 0 ? void 0 : selectedTodo.text) !== todo.text)) {\n        setShowAlert(true);\n        return;\n      }\n      tasksList.set(updatedTodos);\n      if (selectedTodo) {\n        const {\n          completed,\n          text\n        } = selectedTodo;\n        const updatedTodo = {\n          completed,\n          text\n        };\n        try {\n          await axios.put(`${crudAPI}/${selectedTodo._id}`, updatedTodo);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n      handleCloseModal();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      open: Boolean(todoId),\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.popUp,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Edit Todo\",\n          variant: \"outlined\",\n          onChange: e => handleChange(e.target.value),\n          type: \"text\",\n          value: text.value,\n          sx: {\n            width: '100%',\n            mb: '1rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleUpdate,\n          className: classes.popUpButton,\n          children: \"Update Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), showAlert && /*#__PURE__*/_jsxDEV(AlertModal, {\n      open: showAlert,\n      onClose: () => setShowAlert(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(TodoModal, \"nNdNewB28j9jqkRwDp7IlE0OWlc=\", false, function () {\n  return [useStyles, useGlobalState, useHookstate];\n});\n_c = TodoModal;\nexport default TodoModal;\n// End of File (EOF)\nvar _c;\n$RefreshReg$(_c, \"TodoModal\");","map":{"version":3,"names":["useEffect","useState","Box","Modal","TextField","Button","makeStyles","useGlobalState","useHookstate","crudAPI","AlertModal","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","popUp","position","top","left","transform","backgroundColor","width","p","borderRadius","padding","popUpButton","color","TodoModal","_ref","_s","todoId","handleCloseModal","classes","tasksList","text","showAlert","setShowAlert","value","selectedTodo","find","todo","_id","set","handleChange","handleUpdate","prevTodos","get","noproxy","updatedTodos","map","trim","completed","updatedTodo","put","error","console","children","open","Boolean","onClose","className","label","variant","onChange","e","target","type","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/mergestack/todoapp/src/components/EditTodoModal.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Box, Modal, TextField, Button } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { useGlobalState } from 'store/TodoStore';\nimport { useHookstate } from '@hookstate/core';\nimport { crudAPI, Todo } from 'components/Constants';\nimport AlertModal from \"./AlertModal\";\nimport axios from 'axios';\n\nconst useStyles = makeStyles({\n  popUp: {\n    \"&&\": {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      backgroundColor: 'white',\n      width: '300px',\n      p: '1rem',\n      borderRadius: '8px',\n      padding: 15\n    }\n  },\n  popUpButton: {\n    \"&&\": {\n      width: '100%',\n      backgroundColor: '#ff5252',\n      color: 'white',\n      '&:hover': {\n        backgroundColor: 'black',\n        color: 'white',\n      },\n    }\n  },\n})\n\ntype TodoModalProps = {\n  todoId: string | null;\n  handleCloseModal: () => void;\n};\n\nconst TodoModal = ({ todoId, handleCloseModal }: TodoModalProps) => {\n\n  const classes = useStyles();\n  const { tasksList } = useGlobalState();\n  const text = useHookstate('');\n  const [showAlert, setShowAlert] = useState(false);\n\n  useEffect(() => {\n    if (tasksList.value) {\n      const selectedTodo = tasksList.value.find(todo => todo._id === todoId);\n      if (selectedTodo) {\n        text.set(selectedTodo.text)\n      } else {\n        text.set('')\n        handleCloseModal();\n      }\n    }\n  }, [todoId, handleCloseModal]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleChange = (value: string) => {\n    text.set(value);\n  };\n\n  const handleUpdate = async () => {\n    const prevTodos = tasksList.get({ noproxy: true });\n    const updatedTodos = prevTodos.map((todo) =>\n      todo._id === todoId ? { ...todo, text: text.get().trim() } : todo\n    );\n    const selectedTodo = updatedTodos.find((todo) => todo._id === todoId);\n\n    if (prevTodos) {\n      if (prevTodos.find((todo) => todo.text === text.get() && selectedTodo?.text !== todo.text)) {\n        setShowAlert(true)\n        return;\n      }\n      tasksList.set(updatedTodos);\n\n      if (selectedTodo) {\n        const { completed, text } = selectedTodo;\n        const updatedTodo: Partial<Todo> = { completed, text };\n        try {\n          await axios.put(`${crudAPI}/${selectedTodo._id}`, updatedTodo);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      handleCloseModal();\n    }\n  };\n\n  return (\n    <>\n      <Modal open={Boolean(todoId)} onClose={handleCloseModal}>\n        <Box className={classes.popUp} >\n          <TextField\n            label=\"Edit Todo\"\n            variant=\"outlined\"\n            onChange={(e) => handleChange(e.target.value)}\n            type=\"text\"\n            value={text.value}\n            sx={{ width: '100%', mb: '1rem' }}\n          />\n          <Button\n            variant=\"outlined\"\n            onClick={handleUpdate}\n            className={classes.popUpButton}\n          >\n            Update Todo\n          </Button>\n        </Box>\n      </Modal>\n\n      {showAlert && (\n        <AlertModal\n          open={showAlert}\n          onClose={() => setShowAlert(false)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TodoModal;\n// End of File (EOF)\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}