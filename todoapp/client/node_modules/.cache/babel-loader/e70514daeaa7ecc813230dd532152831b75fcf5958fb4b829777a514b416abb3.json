{"ast":null,"code":"// reducers/todoReducer.ts\n\nimport { TodoActionTypes } from \"./TodoActions\";\nconst initialState = {\n  todos: []\n};\nconst todoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case TodoActionTypes.ADD_TODO:\n      return {\n        ...state,\n        todos: [...state.todos, {\n          _id: action.payload.id,\n          text: action.payload.text,\n          completed: false\n        }]\n      };\n    case TodoActionTypes.TOGGLE_TODO:\n      return {\n        ...state,\n        todos: state.todos.map(todo => todo._id === action.payload.id ? {\n          ...todo,\n          completed: !todo.completed\n        } : todo)\n      };\n    case TodoActionTypes.DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo._id !== action.payload.id)\n      };\n    case TodoActionTypes.FETCH_TODOS_SUCCESS:\n      return {\n        ...state,\n        todos: action.payload.todos\n      };\n    default:\n      return state;\n  }\n};\nexport default todoReducer;","map":{"version":3,"names":["TodoActionTypes","initialState","todos","todoReducer","state","arguments","length","undefined","action","type","ADD_TODO","_id","payload","id","text","completed","TOGGLE_TODO","map","todo","DELETE_TODO","filter","FETCH_TODOS_SUCCESS"],"sources":["/home/mergestack/todoapp/src/state/ducks/todos/TodoReducer.tsx"],"sourcesContent":["// reducers/todoReducer.ts\n\nimport { TodoAction, TodoActionTypes } from \"./TodoActions\";\nimport { Todo } from \"components/Constants\"\n\ninterface TodoState {\n  todos: Todo[];\n}\n\nconst initialState: TodoState = {\n  todos: [],\n};\n\nconst todoReducer = (state = initialState, action: TodoAction): TodoState => {\n  switch (action.type) {\n    case TodoActionTypes.ADD_TODO:\n      return {\n        ...state,\n        todos: [...state.todos, { _id: action.payload.id, text: action.payload.text, completed: false }],\n      };\n    case TodoActionTypes.TOGGLE_TODO:\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo._id === action.payload.id ? { ...todo, completed: !todo.completed } : todo\n        ),\n      };\n    case TodoActionTypes.DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo._id !== action.payload.id),\n      };\n    case TodoActionTypes.FETCH_TODOS_SUCCESS:\n      return {\n        ...state,\n        todos: action.payload.todos,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n"],"mappings":"AAAA;;AAEA,SAAqBA,eAAe,QAAQ,eAAe;AAO3D,MAAMC,YAAuB,GAAG;EAC9BC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAyD;EAAA,IAAxDC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAkB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3D,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKT,eAAe,CAACU,QAAQ;MAC3B,OAAO;QACL,GAAGN,KAAK;QACRF,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAK,EAAE;UAAES,GAAG,EAAEH,MAAM,CAACI,OAAO,CAACC,EAAE;UAAEC,IAAI,EAAEN,MAAM,CAACI,OAAO,CAACE,IAAI;UAAEC,SAAS,EAAE;QAAM,CAAC;MACjG,CAAC;IACH,KAAKf,eAAe,CAACgB,WAAW;MAC9B,OAAO;QACL,GAAGZ,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACe,GAAG,CAAEC,IAAI,IAC1BA,IAAI,CAACP,GAAG,KAAKH,MAAM,CAACI,OAAO,CAACC,EAAE,GAAG;UAAE,GAAGK,IAAI;UAAEH,SAAS,EAAE,CAACG,IAAI,CAACH;QAAU,CAAC,GAAGG,IAC7E;MACF,CAAC;IACH,KAAKlB,eAAe,CAACmB,WAAW;MAC9B,OAAO;QACL,GAAGf,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACkB,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACP,GAAG,KAAKH,MAAM,CAACI,OAAO,CAACC,EAAE;MACpE,CAAC;IACH,KAAKb,eAAe,CAACqB,mBAAmB;MACtC,OAAO;QACL,GAAGjB,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACI,OAAO,CAACV;MACxB,CAAC;IACH;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}