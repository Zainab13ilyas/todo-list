{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { TodoActionTypes } from \"state/todos/TodoActions\";\nimport { crudAPI } from \"components/Constants\";\nfunction* fetchTodosSaga() {\n  try {\n    const response = yield call(axios.get, crudAPI);\n    const todos = response.data;\n    yield put({\n      type: TodoActionTypes.FETCH_TODOS_SUCCESS,\n      payload: {\n        todos\n      }\n    });\n  } catch (error) {\n    yield put({\n      type: TodoActionTypes.FETCH_TODOS_FAILURE,\n      payload: {\n        error: error.message\n      }\n    });\n  }\n}\nfunction* watchFetchTodos() {\n  yield takeLatest(TodoActionTypes.FETCH_TODOS_REQUEST, fetchTodosSaga);\n}\nfunction* deleteTodoSaga(action) {\n  try {\n    const {\n      id\n    } = action.payload;\n    yield call(axios.delete, `${crudAPI}/${id}`);\n    yield put({\n      type: TodoActionTypes.DELETE_TODO,\n      payload: {\n        id\n      }\n    });\n  } catch (error) {}\n}\nfunction* watchDeleteTodo() {\n  yield takeLatest(TodoActionTypes.DELETE_TODO, deleteTodoSaga);\n}\nexport function* todoSagas() {\n  yield watchFetchTodos();\n  yield watchDeleteTodo();\n}\n// End of File (EOF)","map":{"version":3,"names":["call","put","takeLatest","axios","TodoActionTypes","crudAPI","fetchTodosSaga","response","get","todos","data","type","FETCH_TODOS_SUCCESS","payload","error","FETCH_TODOS_FAILURE","message","watchFetchTodos","FETCH_TODOS_REQUEST","deleteTodoSaga","action","id","delete","DELETE_TODO","watchDeleteTodo","todoSagas"],"sources":["/home/mergestack/todoapp/src/state/todos/Sagas.tsx"],"sourcesContent":["\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { TodoActionTypes } from \"state/todos/TodoActions\"\nimport { Todo, crudAPI } from \"components/Constants\";\n\nfunction* fetchTodosSaga(): any {\n  try {\n    const response = yield call(axios.get, crudAPI);\n    const todos: Todo[] = response.data;\n    yield put({ type: TodoActionTypes.FETCH_TODOS_SUCCESS, payload: { todos } });\n  } catch (error: any) {\n    yield put({ type: TodoActionTypes.FETCH_TODOS_FAILURE, payload: { error: error.message } });\n  }\n}\n\nfunction* watchFetchTodos() {\n  yield takeLatest(TodoActionTypes.FETCH_TODOS_REQUEST, fetchTodosSaga);\n}\nfunction* deleteTodoSaga(action: { type: string, payload: { id: string } }) {\n  try {\n    const { id } = action.payload;\n    yield call(axios.delete, `${crudAPI}/${id}`);\n    yield put({ type: TodoActionTypes.DELETE_TODO, payload: { id } });\n  } catch (error: any) {\n  }\n}\n\nfunction* watchDeleteTodo() {\n  yield takeLatest(TodoActionTypes.DELETE_TODO, deleteTodoSaga);\n}\n\nexport function* todoSagas() {\n  yield watchFetchTodos();\n  yield watchDeleteTodo();\n}\n// End of File (EOF)\n"],"mappings":"AACA,SAASA,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAAeC,OAAO,QAAQ,sBAAsB;AAEpD,UAAUC,cAAcA,CAAA,EAAQ;EAC9B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACG,KAAK,CAACK,GAAG,EAAEH,OAAO,CAAC;IAC/C,MAAMI,KAAa,GAAGF,QAAQ,CAACG,IAAI;IACnC,MAAMT,GAAG,CAAC;MAAEU,IAAI,EAAEP,eAAe,CAACQ,mBAAmB;MAAEC,OAAO,EAAE;QAAEJ;MAAM;IAAE,CAAC,CAAC;EAC9E,CAAC,CAAC,OAAOK,KAAU,EAAE;IACnB,MAAMb,GAAG,CAAC;MAAEU,IAAI,EAAEP,eAAe,CAACW,mBAAmB;MAAEF,OAAO,EAAE;QAAEC,KAAK,EAAEA,KAAK,CAACE;MAAQ;IAAE,CAAC,CAAC;EAC7F;AACF;AAEA,UAAUC,eAAeA,CAAA,EAAG;EAC1B,MAAMf,UAAU,CAACE,eAAe,CAACc,mBAAmB,EAAEZ,cAAc,CAAC;AACvE;AACA,UAAUa,cAAcA,CAACC,MAAiD,EAAE;EAC1E,IAAI;IACF,MAAM;MAAEC;IAAG,CAAC,GAAGD,MAAM,CAACP,OAAO;IAC7B,MAAMb,IAAI,CAACG,KAAK,CAACmB,MAAM,EAAG,GAAEjB,OAAQ,IAAGgB,EAAG,EAAC,CAAC;IAC5C,MAAMpB,GAAG,CAAC;MAAEU,IAAI,EAAEP,eAAe,CAACmB,WAAW;MAAEV,OAAO,EAAE;QAAEQ;MAAG;IAAE,CAAC,CAAC;EACnE,CAAC,CAAC,OAAOP,KAAU,EAAE,CACrB;AACF;AAEA,UAAUU,eAAeA,CAAA,EAAG;EAC1B,MAAMtB,UAAU,CAACE,eAAe,CAACmB,WAAW,EAAEJ,cAAc,CAAC;AAC/D;AAEA,OAAO,UAAUM,SAASA,CAAA,EAAG;EAC3B,MAAMR,eAAe,CAAC,CAAC;EACvB,MAAMO,eAAe,CAAC,CAAC;AACzB;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}