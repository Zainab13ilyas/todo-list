{"ast":null,"code":"var _s = $RefreshSig$();\nimport { hookstate, useHookstate } from \"@hookstate/core\";\nconst initialTodos = [];\nconst globalTodos = hookstate(initialTodos);\nexport const useGlobalState = () => {\n  _s();\n  const todosState = useHookstate(globalTodos);\n  const createTodo = text => {\n    const newTodo = {\n      id: Date.now().toString(),\n      text: text.trim(),\n      completed: false\n    };\n    todosState.merge([...todosState.value, newTodo]);\n  };\n  const deleteTodo = id => {\n    todosState.set(prevTodos => prevTodos.filter(todo => todo.id !== id));\n  };\n  const updateTodo = (id, updatedText) => {\n    todosState.set(prevTodos => prevTodos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          text: updatedText\n        };\n      }\n      return todo;\n    }));\n  };\n  const toggleTodo = id => {\n    todosState.set(prevTodos => prevTodos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n  return {\n    todosState,\n    createTodo,\n    deleteTodo,\n    updateTodo,\n    toggleTodo\n  };\n};\n_s(useGlobalState, \"pn4VgGq/MN7BqlRERZ3jlFXVbbk=\", false, function () {\n  return [useHookstate];\n});","map":{"version":3,"names":["hookstate","useHookstate","initialTodos","globalTodos","useGlobalState","_s","todosState","createTodo","text","newTodo","id","Date","now","toString","trim","completed","merge","value","deleteTodo","set","prevTodos","filter","todo","updateTodo","updatedText","map","toggleTodo"],"sources":["/home/mergestack/todoapp/src/store/index.tsx"],"sourcesContent":["import { hookstate, useHookstate } from \"@hookstate/core\";\n\nexport type Todo = {\n  id: string;\n  text: string;\n  completed: boolean;\n};\n\nconst initialTodos: Todo[] = [];\n\nconst globalTodos = hookstate(initialTodos);\n\nexport const useGlobalState = () => {\n  const todosState = useHookstate(globalTodos);\n\n  const createTodo = (text: string) => {\n    const newTodo: Todo = {\n      id: Date.now().toString(),\n      text: text.trim(),\n      completed: false,\n    };\n\n    todosState.merge([...todosState.value, newTodo]);\n  };\n\n  const deleteTodo = (id: string) => {\n    todosState.set((prevTodos) =>\n      prevTodos.filter((todo) => todo.id !== id)\n    );\n  };\n\n  const updateTodo = (id: string, updatedText: string) => {\n    todosState.set((prevTodos) =>\n      prevTodos.map((todo) => {\n        if (todo.id === id) {\n          return { ...todo, text: updatedText };\n        }\n        return todo;\n      })\n    );\n  };\n\n  const toggleTodo = (id: string) => {\n    todosState.set((prevTodos) =>\n      prevTodos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n\n  return {\n    todosState,\n    createTodo,\n    deleteTodo,\n    updateTodo,\n    toggleTodo,\n  };\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,QAAQ,iBAAiB;AAQzD,MAAMC,YAAoB,GAAG,EAAE;AAE/B,MAAMC,WAAW,GAAGH,SAAS,CAACE,YAAY,CAAC;AAE3C,OAAO,MAAME,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,UAAU,GAAGL,YAAY,CAACE,WAAW,CAAC;EAE5C,MAAMI,UAAU,GAAIC,IAAY,IAAK;IACnC,MAAMC,OAAa,GAAG;MACpBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MACzBL,IAAI,EAAEA,IAAI,CAACM,IAAI,CAAC,CAAC;MACjBC,SAAS,EAAE;IACb,CAAC;IAEDT,UAAU,CAACU,KAAK,CAAC,CAAC,GAAGV,UAAU,CAACW,KAAK,EAAER,OAAO,CAAC,CAAC;EAClD,CAAC;EAED,MAAMS,UAAU,GAAIR,EAAU,IAAK;IACjCJ,UAAU,CAACa,GAAG,CAAEC,SAAS,IACvBA,SAAS,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACZ,EAAE,KAAKA,EAAE,CAC3C,CAAC;EACH,CAAC;EAED,MAAMa,UAAU,GAAGA,CAACb,EAAU,EAAEc,WAAmB,KAAK;IACtDlB,UAAU,CAACa,GAAG,CAAEC,SAAS,IACvBA,SAAS,CAACK,GAAG,CAAEH,IAAI,IAAK;MACtB,IAAIA,IAAI,CAACZ,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGY,IAAI;UAAEd,IAAI,EAAEgB;QAAY,CAAC;MACvC;MACA,OAAOF,IAAI;IACb,CAAC,CACH,CAAC;EACH,CAAC;EAED,MAAMI,UAAU,GAAIhB,EAAU,IAAK;IACjCJ,UAAU,CAACa,GAAG,CAAEC,SAAS,IACvBA,SAAS,CAACK,GAAG,CAAEH,IAAI,IACjBA,IAAI,CAACZ,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGY,IAAI;MAAEP,SAAS,EAAE,CAACO,IAAI,CAACP;IAAU,CAAC,GAAGO,IAC7D,CACF,CAAC;EACH,CAAC;EAED,OAAO;IACLhB,UAAU;IACVC,UAAU;IACVW,UAAU;IACVK,UAAU;IACVG;EACF,CAAC;AACH,CAAC;AAACrB,EAAA,CA7CWD,cAAc;EAAA,QACNH,YAAY;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}