{"ast":null,"code":"var _jsxFileName = \"/home/mergestack/todoapp/src/components/Todo.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { TextField, Card, Box, Typography, Button, Stack, IconButton, useMediaQuery, List, ListItem, ListItemText } from \"@mui/material\";\nimport { makeStyles } from '@mui/styles';\nimport { useHookstate, hookstate } from \"@hookstate/core\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport background from \"../assets/backdrop.jpg\";\nimport TodoModal from './EditTodoModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    \"&&\": {\n      backgroundImage: `url(${background})`,\n      height: '100vh',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      width: '100vw',\n      backgroundRepeat: 'no-repeat',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  },\n  container: {\n    \"&&\": {\n      backgroundColor: '#ff5252',\n      color: 'white',\n      padding: '1rem',\n      width: '30%',\n      height: '70vh',\n      boxShadow: '5px 5px 25px -5px rgba(0,0,0,0.5)',\n      borderRadius: 0,\n      margin: 'auto',\n      textAlign: 'left',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      position: 'relative',\n      \"@media (min-width: 768px)\": {\n        width: \"40%\"\n      },\n      \"@media (min-width: 1592px)\": {\n        width: \"30%\"\n      }\n    }\n  },\n  firststack: {\n    \"&&\": {\n      marginBottom: '40px'\n    }\n  },\n  headings: {\n    \"&&\": {\n      marginLeft: '50px',\n      marginTop: '15px',\n      fontWeight: 'bold'\n    }\n  },\n  subheadings: {\n    \"&&\": {\n      marginLeft: '60px',\n      mb: '15px',\n      fontWeight: 'bold'\n    }\n  },\n  hr: {\n    \"&&\": {\n      margin: 'center',\n      marginInlineStart: '7%',\n      marginInlineEnd: '7%'\n    }\n  },\n  card: {\n    \"&&\": {\n      background: '#ff5252',\n      maxHeight: '273px',\n      overflowY: 'auto',\n      alignItems: 'center',\n      padding: 0,\n      boxShadow: 'none',\n      border: 'none',\n      outline: 'none'\n    }\n  },\n  cardContent: {\n    \"&&\": {\n      alignItems: 'center',\n      background: 'rgba(255, 205, 210, 0.25)',\n      padding: 0,\n      justifyContent: 'space-between',\n      height: \"85px\"\n    }\n  },\n  listItem: {\n    \"&&\": {\n      height: \"85px\",\n      background: 'rgba(255, 205, 210, 0.25)'\n    }\n  },\n  stacktwo: {\n    \"&&\": {\n      position: \"absolute\",\n      width: \"100%\",\n      left: 0,\n      right: 0\n    }\n  },\n  taskName: {\n    \"&&\": {\n      color: \"white\",\n      marginLeft: \"50px\",\n      cursor: \"pointer\"\n    }\n  },\n  newTodo: {\n    \"&&\": {\n      position: 'absolute',\n      bottom: '50px',\n      width: '100%',\n      flexDirection: 'column',\n      marginLeft: '60px',\n      marginRight: '50px',\n      overflowY: 'auto'\n    }\n  },\n  todoHeading: {\n    \"&&\": {\n      mb: '5px',\n      fontWeight: 'bold'\n    }\n  },\n  todoContainer: {\n    \"&&\": {\n      gap: '0.4rem',\n      marginRight: '60px',\n      display: 'flex'\n    }\n  },\n  todoTextField: {\n    \"&&\": {\n      width: '60%',\n      fontWeight: 'bold',\n      borderRadius: 0,\n      '& .MuiOutlinedInput-root': {\n        backgroundColor: 'white',\n        '&:hover fieldset': {\n          borderColor: 'white'\n        },\n        '&.Mui-focused fieldset': {\n          borderColor: '#ff5252'\n        }\n      },\n      \"@media (max-width: 600px)\": {\n        todoTextField: {\n          width: '50%'\n        }\n      }\n    }\n  },\n  todoButton: {\n    \"&&\": {\n      backgroundColor: '#ff5252',\n      borderColor: 'white',\n      color: 'white',\n      fontWeight: 'bold',\n      borderRadius: 0,\n      '&:hover': {\n        backgroundColor: 'black'\n      },\n      '&:focus': {\n        outlineColor: '#ff5252'\n      },\n      \"@media (max-width: 600px)\": {\n        todoButton: {\n          width: '100%'\n        }\n      }\n    }\n  }\n});\nconst globalTodos = hookstate([]);\nfunction Todos() {\n  _s();\n  const isSmallScreen = useMediaQuery('(max-width:600px)');\n  const classes = useStyles();\n  const todosState = useHookstate(globalTodos);\n  const textState = useHookstate('');\n  const selectedTodoState = useHookstate(null);\n  //const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleChange = e => {\n    textState.set(e.target.value);\n  };\n  const createTodo = e => {\n    e.preventDefault();\n    if (selectedTodoState.get()) {\n      todosState.set(prevTodos => prevTodos.map(todo => {\n        if (todo.id === selectedTodoState.get().id) {\n          return {\n            ...todo,\n            text: textState.get().trim()\n          };\n        }\n        return todo;\n      }));\n      selectedTodoState.set(null);\n    } else {\n      const newTodo = {\n        id: Date.now().toString(),\n        text: textState.value.trim(),\n        completed: false\n      };\n      todosState.merge([newTodo]);\n    }\n    textState.set('');\n  };\n  const deleteTodo = id => {\n    todosState.merge(prevTodos => prevTodos.filter(todo => todo.id !== id));\n  };\n  const openModal = todo => {\n    selectedTodoState.set(todo);\n  };\n  const closeModal = () => {\n    selectedTodoState.set(null);\n  };\n  const updateTodo = (id, updatedText) => {\n    todosState.merge(prevTodos => prevTodos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          text: updatedText\n        };\n      }\n      return todo;\n    }));\n  };\n  const toggleTodo = id => {\n    todosState.merge(prevTodos => prevTodos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"div\",\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"column\",\n        className: classes.firststack,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          className: classes.headings,\n          children: \"Todo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          className: classes.subheadings,\n          children: \"A simple React Todo List App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: classes.hr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"column\",\n        className: classes.stacktwo,\n        children: todosState.value.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n          variant: \"outlined\",\n          className: classes.card,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: todosState.value.map((todo, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                className: classes.listItem,\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: todo.text,\n                  className: classes.taskName,\n                  onClick: () => toggleTodo(todo.id),\n                  sx: {\n                    textDecoration: todo.completed ? 'line-through' : 'none'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    marginRight: \"50px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"edit\",\n                    onClick: () => openModal(todo),\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                      sx: {\n                        color: \"white\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"delele\",\n                    onClick: () => deleteTodo(todo.id),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      sx: {\n                        color: \"white\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 23\n                }, this)]\n              }, todo.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this), index !== todosState.value.length - 1 && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  marginBottom: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 23\n              }, this)]\n            }, todo.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"column\",\n        className: classes.newTodo,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.todoHeading,\n          children: \"New Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.todoContainer,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              sx: {\n                fontWeight: \"bold\"\n              },\n              children: \"New Todo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this),\n            variant: \"outlined\",\n            className: classes.todoTextField,\n            value: textState.value,\n            sx: {\n              width: isSmallScreen ? \"50%\" : \"60%\"\n            },\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            size: \"large\",\n            sx: {\n              width: isSmallScreen ? '100%' : 'auto'\n            },\n            className: classes.todoButton,\n            disabled: !textState.value,\n            onClick: createTodo,\n            children: \"Add Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoModal, {\n        selectedTodo: selectedTodoState.value,\n        handleCloseModal: closeModal,\n        handleUpdateTodo: updateTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n}\n_s(Todos, \"i/gK92/9a8NnXSgUNRZid4J+bEQ=\", false, function () {\n  return [useMediaQuery, useStyles, useHookstate, useHookstate, useHookstate];\n});\n_c = Todos;\nexport default Todos;\n// End of File (EOF)\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","TextField","Card","Box","Typography","Button","Stack","IconButton","useMediaQuery","List","ListItem","ListItemText","makeStyles","useHookstate","hookstate","EditIcon","DeleteIcon","background","TodoModal","jsxDEV","_jsxDEV","useStyles","root","backgroundImage","height","backgroundSize","backgroundPosition","width","backgroundRepeat","display","justifyContent","alignItems","container","backgroundColor","color","padding","boxShadow","borderRadius","margin","textAlign","position","firststack","marginBottom","headings","marginLeft","marginTop","fontWeight","subheadings","mb","hr","marginInlineStart","marginInlineEnd","card","maxHeight","overflowY","border","outline","cardContent","listItem","stacktwo","left","right","taskName","cursor","newTodo","bottom","flexDirection","marginRight","todoHeading","todoContainer","gap","todoTextField","borderColor","todoButton","outlineColor","globalTodos","Todos","_s","isSmallScreen","classes","todosState","textState","selectedTodoState","handleChange","e","set","target","value","createTodo","preventDefault","get","prevTodos","map","todo","id","text","trim","Date","now","toString","completed","merge","deleteTodo","filter","openModal","closeModal","updateTodo","updatedText","toggleTodo","className","children","component","direction","variant","fileName","_jsxFileName","lineNumber","columnNumber","length","index","Fragment","primary","onClick","sx","textDecoration","label","onChange","size","disabled","selectedTodo","handleCloseModal","handleUpdateTodo","_c","$RefreshReg$"],"sources":["/home/mergestack/todoapp/src/components/Todo.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent, Fragment } from \"react\";\nimport {\n  TextField,\n  Card,\n  CardContent,\n  Box,\n  Typography,\n  Button,\n  Stack,\n  IconButton, useMediaQuery,\n  List, ListItem, ListItemText, Modal, Grid\n} from \"@mui/material\";\nimport { makeStyles } from '@mui/styles';\nimport { useHookstate, hookstate } from \"@hookstate/core\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport Divider from '@mui/material/Divider';\nimport background from \"../assets/backdrop.jpg\";\nimport TodoModal from './EditTodoModal';\n\nconst useStyles = makeStyles({\n  root: {\n    \"&&\": {\n      backgroundImage: `url(${background})`,\n      height: '100vh',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      width: '100vw',\n      backgroundRepeat: 'no-repeat',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }\n  },\n  container: {\n    \"&&\": {\n      backgroundColor: '#ff5252',\n      color: 'white',\n      padding: '1rem',\n      width: '30%',\n      height: '70vh',\n      boxShadow: '5px 5px 25px -5px rgba(0,0,0,0.5)',\n      borderRadius: 0,\n      margin: 'auto',\n      textAlign: 'left',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      position: 'relative',\n      \"@media (min-width: 768px)\": {\n        width: \"40%\",\n      },\n      \"@media (min-width: 1592px)\": {\n        width: \"30%\",\n      },\n    }\n\n  },\n  firststack: {\n    \"&&\": {\n      marginBottom: '40px'\n    }\n  },\n  headings: {\n    \"&&\": {\n      marginLeft: '50px',\n      marginTop: '15px',\n      fontWeight: 'bold',\n    }\n  },\n  subheadings: {\n    \"&&\": {\n      marginLeft: '60px',\n      mb: '15px',\n      fontWeight: 'bold',\n    }\n  },\n  hr: {\n    \"&&\": {\n      margin: 'center',\n      marginInlineStart: '7%',\n      marginInlineEnd: '7%',\n    }\n  },\n  card: {\n    \"&&\": {\n      background: '#ff5252',\n      maxHeight: '273px',\n      overflowY: 'auto',\n      alignItems: 'center',\n      padding: 0,\n      boxShadow: 'none',\n      border: 'none',\n      outline: 'none',\n    }\n  },\n  cardContent: {\n    \"&&\": {\n      alignItems: 'center',\n      background: 'rgba(255, 205, 210, 0.25)',\n      padding: 0,\n      justifyContent: 'space-between',\n      height: \"85px\",\n    }\n  },\n  listItem: {\n    \"&&\": {\n      height: \"85px\", background: 'rgba(255, 205, 210, 0.25)'\n    }\n  },\n  stacktwo: {\n    \"&&\": {\n      position: \"absolute\",\n      width: \"100%\",\n      left: 0,\n      right: 0,\n    }\n  },\n  taskName: {\n    \"&&\": {\n      color: \"white\",\n      marginLeft: \"50px\",\n      cursor: \"pointer\"\n    }\n  },\n  newTodo: {\n    \"&&\": {\n      position: 'absolute',\n      bottom: '50px',\n      width: '100%',\n      flexDirection: 'column',\n      marginLeft: '60px',\n      marginRight: '50px',\n      overflowY: 'auto',\n    }\n  },\n  todoHeading: {\n    \"&&\": {\n      mb: '5px',\n      fontWeight: 'bold',\n    }\n  },\n  todoContainer: {\n    \"&&\": {\n      gap: '0.4rem',\n      marginRight: '60px',\n      display: 'flex',\n    }\n  },\n  todoTextField: {\n    \"&&\": {\n      width: '60%',\n      fontWeight: 'bold',\n      borderRadius: 0,\n      '& .MuiOutlinedInput-root': {\n        backgroundColor: 'white',\n        '&:hover fieldset': {\n          borderColor: 'white',\n        },\n        '&.Mui-focused fieldset': {\n          borderColor: '#ff5252',\n        },\n      },\n      \"@media (max-width: 600px)\": {\n        todoTextField: {\n          width: '50%',\n        }\n      }\n    }\n  },\n  todoButton: {\n    \"&&\": {\n      backgroundColor: '#ff5252',\n      borderColor: 'white',\n      color: 'white',\n      fontWeight: 'bold',\n      borderRadius: 0,\n      '&:hover': {\n        backgroundColor: 'black',\n      },\n      '&:focus': {\n        outlineColor: '#ff5252',\n      },\n      \"@media (max-width: 600px)\": {\n        todoButton: {\n          width: '100%',\n        }\n      }\n    }\n  },\n})\n\n\ntype Todo = {\n  id: string;\n  text: string;\n  completed: boolean\n}\nconst globalTodos = hookstate<Todo[]>([]);\n\nfunction Todos(): JSX.Element {\n  const isSmallScreen = useMediaQuery('(max-width:600px)');\n  const classes = useStyles();\n  const todosState = useHookstate(globalTodos);\n  const textState = useHookstate('');\n  const selectedTodoState = useHookstate<Todo | null>(null);\n  //const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    textState.set(e.target.value);\n  }\n  const createTodo = (e: FormEvent) => {\n    e.preventDefault();\n\n    if (selectedTodoState.get()) {\n      todosState.set((prevTodos) =>\n        prevTodos.map((todo) => {\n          if (todo.id === selectedTodoState.get().id) {\n            return { ...todo, text: textState.get().trim() };\n          }\n          return todo;\n        })\n      );\n      selectedTodoState.set(null);\n    } else {\n      const newTodo = {\n        id: Date.now().toString(),\n        text: textState.value.trim(),\n        completed: false,\n      };\n      todosState.merge([newTodo]);\n\n    }\n    textState.set('');\n  };\n\n  const deleteTodo = (id: string) => {\n    todosState.merge((prevTodos: Todo[]) =>\n      prevTodos.filter((todo) => todo.id !== id)\n    );\n  };\n\n  const openModal = (todo: Todo) => {\n    selectedTodoState.set(todo);\n  };\n\n  const closeModal = () => {\n    selectedTodoState.set(null);\n  };\n\n  const updateTodo = (id: string, updatedText: string) => {\n    todosState.merge((prevTodos: Todo[]) =>\n      prevTodos.map((todo) => {\n        if (todo.id === id) {\n          return { ...todo, text: updatedText };\n        }\n        return todo;\n      })\n    );\n  }\n  const toggleTodo = (id: string) => {\n    todosState.merge((prevTodos: Todo[]) =>\n      prevTodos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n  return (\n    <Stack className={classes.root}>\n      <Box\n        component=\"div\" className={classes.container}\n      >\n        <Stack direction=\"column\" className={classes.firststack}>\n          <Typography\n            variant=\"h2\"\n            className={classes.headings}>\n            Todo List\n          </Typography>\n          <Typography\n            variant=\"subtitle1\"\n            className={classes.subheadings}>\n            A simple React Todo List App\n          </Typography>\n          <hr\n            className={classes.hr} />\n        </Stack>\n\n        <Stack\n          direction=\"column\"\n          className={classes.stacktwo}\n        >\n          {todosState.value.length > 0 && (\n            <Card\n              variant=\"outlined\"\n              className={classes.card}>\n              <List >\n                {todosState.value.map((todo: Todo, index: number) => (\n                  <React.Fragment key={todo.id}>\n                    <ListItem key={todo.id} className={classes.listItem}>\n                      <ListItemText primary={todo.text} className={classes.taskName} onClick={() => toggleTodo(todo.id)} sx={{ textDecoration: todo.completed ? 'line-through' : 'none' }}\n                      />\n                      <Box sx={{ marginRight: \"50px\" }}>\n                        <IconButton aria-label=\"edit\" onClick={() => openModal(todo)}>\n                          <EditIcon sx={{ color: \"white\" }} />\n                        </IconButton>\n                        <IconButton aria-label=\"delele\" onClick={() => deleteTodo(todo.id)}>\n                          <DeleteIcon sx={{ color: \"white\" }} />\n                        </IconButton>\n                      </Box>\n                    </ListItem>\n                    {index !== todosState.value.length - 1 &&\n                      <Box sx={{ marginBottom: '5px' }} />\n                    }\n\n                  </React.Fragment>\n                ))}\n              </List>\n            </Card>\n          )}\n        </Stack>\n\n        <Stack\n          direction=\"column\"\n          className={classes.newTodo}\n        >\n          <Typography\n            variant=\"h6\"\n            className={classes.todoHeading}>\n            New Todo\n          </Typography>\n          <Box className={classes.todoContainer}\n          >\n            <TextField\n              label={\n                <Typography variant=\"subtitle1\" sx={{ fontWeight: \"bold\" }} >\n                  New Todo\n                </Typography>\n              }\n              variant=\"outlined\"\n              className={classes.todoTextField}\n              value={textState.value}\n              sx={{ width: isSmallScreen ? \"50%\" : \"60%\", }}\n              onChange={handleChange}\n            />\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              sx={{ width: isSmallScreen ? '100%' : 'auto' }}\n              className={classes.todoButton}\n              disabled={!textState.value}\n              onClick={createTodo}\n            >\n              Add Todo\n            </Button>\n          </Box>\n        </Stack>\n\n        <TodoModal\n          selectedTodo={selectedTodoState.value}\n          handleCloseModal={closeModal}\n          handleUpdateTodo={updateTodo}\n        />\n\n      </Box >\n    </Stack >\n  );\n}\n\nexport default Todos;\n// End of File (EOF)\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAsD,OAAO;AACzE,SACEC,SAAS,EACTC,IAAI,EAEJC,GAAG,EACHC,UAAU,EACVC,MAAM,EACNC,KAAK,EACLC,UAAU,EAAEC,aAAa,EACzBC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,QACvB,eAAe;AACtB,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,YAAY,EAAEC,SAAS,QAAQ,iBAAiB;AACzD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,UAAU,MAAM,4BAA4B;AAEnD,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,SAAS,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGT,UAAU,CAAC;EAC3BU,IAAI,EAAE;IACJ,IAAI,EAAE;MACJC,eAAe,EAAG,OAAMN,UAAW,GAAE;MACrCO,MAAM,EAAE,OAAO;MACfC,cAAc,EAAE,OAAO;MACvBC,kBAAkB,EAAE,QAAQ;MAC5BC,KAAK,EAAE,OAAO;MACdC,gBAAgB,EAAE,WAAW;MAC7BC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE;IACd;EACF,CAAC;EACDC,SAAS,EAAE;IACT,IAAI,EAAE;MACJC,eAAe,EAAE,SAAS;MAC1BC,KAAK,EAAE,OAAO;MACdC,OAAO,EAAE,MAAM;MACfR,KAAK,EAAE,KAAK;MACZH,MAAM,EAAE,MAAM;MACdY,SAAS,EAAE,mCAAmC;MAC9CC,YAAY,EAAE,CAAC;MACfC,MAAM,EAAE,MAAM;MACdC,SAAS,EAAE,MAAM;MACjBR,UAAU,EAAE,QAAQ;MACpBD,cAAc,EAAE,eAAe;MAC/BU,QAAQ,EAAE,UAAU;MACpB,2BAA2B,EAAE;QAC3Bb,KAAK,EAAE;MACT,CAAC;MACD,4BAA4B,EAAE;QAC5BA,KAAK,EAAE;MACT;IACF;EAEF,CAAC;EACDc,UAAU,EAAE;IACV,IAAI,EAAE;MACJC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,IAAI,EAAE;MACJC,UAAU,EAAE,MAAM;MAClBC,SAAS,EAAE,MAAM;MACjBC,UAAU,EAAE;IACd;EACF,CAAC;EACDC,WAAW,EAAE;IACX,IAAI,EAAE;MACJH,UAAU,EAAE,MAAM;MAClBI,EAAE,EAAE,MAAM;MACVF,UAAU,EAAE;IACd;EACF,CAAC;EACDG,EAAE,EAAE;IACF,IAAI,EAAE;MACJX,MAAM,EAAE,QAAQ;MAChBY,iBAAiB,EAAE,IAAI;MACvBC,eAAe,EAAE;IACnB;EACF,CAAC;EACDC,IAAI,EAAE;IACJ,IAAI,EAAE;MACJnC,UAAU,EAAE,SAAS;MACrBoC,SAAS,EAAE,OAAO;MAClBC,SAAS,EAAE,MAAM;MACjBvB,UAAU,EAAE,QAAQ;MACpBI,OAAO,EAAE,CAAC;MACVC,SAAS,EAAE,MAAM;MACjBmB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,WAAW,EAAE;IACX,IAAI,EAAE;MACJ1B,UAAU,EAAE,QAAQ;MACpBd,UAAU,EAAE,2BAA2B;MACvCkB,OAAO,EAAE,CAAC;MACVL,cAAc,EAAE,eAAe;MAC/BN,MAAM,EAAE;IACV;EACF,CAAC;EACDkC,QAAQ,EAAE;IACR,IAAI,EAAE;MACJlC,MAAM,EAAE,MAAM;MAAEP,UAAU,EAAE;IAC9B;EACF,CAAC;EACD0C,QAAQ,EAAE;IACR,IAAI,EAAE;MACJnB,QAAQ,EAAE,UAAU;MACpBb,KAAK,EAAE,MAAM;MACbiC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,IAAI,EAAE;MACJ5B,KAAK,EAAE,OAAO;MACdU,UAAU,EAAE,MAAM;MAClBmB,MAAM,EAAE;IACV;EACF,CAAC;EACDC,OAAO,EAAE;IACP,IAAI,EAAE;MACJxB,QAAQ,EAAE,UAAU;MACpByB,MAAM,EAAE,MAAM;MACdtC,KAAK,EAAE,MAAM;MACbuC,aAAa,EAAE,QAAQ;MACvBtB,UAAU,EAAE,MAAM;MAClBuB,WAAW,EAAE,MAAM;MACnBb,SAAS,EAAE;IACb;EACF,CAAC;EACDc,WAAW,EAAE;IACX,IAAI,EAAE;MACJpB,EAAE,EAAE,KAAK;MACTF,UAAU,EAAE;IACd;EACF,CAAC;EACDuB,aAAa,EAAE;IACb,IAAI,EAAE;MACJC,GAAG,EAAE,QAAQ;MACbH,WAAW,EAAE,MAAM;MACnBtC,OAAO,EAAE;IACX;EACF,CAAC;EACD0C,aAAa,EAAE;IACb,IAAI,EAAE;MACJ5C,KAAK,EAAE,KAAK;MACZmB,UAAU,EAAE,MAAM;MAClBT,YAAY,EAAE,CAAC;MACf,0BAA0B,EAAE;QAC1BJ,eAAe,EAAE,OAAO;QACxB,kBAAkB,EAAE;UAClBuC,WAAW,EAAE;QACf,CAAC;QACD,wBAAwB,EAAE;UACxBA,WAAW,EAAE;QACf;MACF,CAAC;MACD,2BAA2B,EAAE;QAC3BD,aAAa,EAAE;UACb5C,KAAK,EAAE;QACT;MACF;IACF;EACF,CAAC;EACD8C,UAAU,EAAE;IACV,IAAI,EAAE;MACJxC,eAAe,EAAE,SAAS;MAC1BuC,WAAW,EAAE,OAAO;MACpBtC,KAAK,EAAE,OAAO;MACdY,UAAU,EAAE,MAAM;MAClBT,YAAY,EAAE,CAAC;MACf,SAAS,EAAE;QACTJ,eAAe,EAAE;MACnB,CAAC;MACD,SAAS,EAAE;QACTyC,YAAY,EAAE;MAChB,CAAC;MACD,2BAA2B,EAAE;QAC3BD,UAAU,EAAE;UACV9C,KAAK,EAAE;QACT;MACF;IACF;EACF;AACF,CAAC,CAAC;AAQF,MAAMgD,WAAW,GAAG7D,SAAS,CAAS,EAAE,CAAC;AAEzC,SAAS8D,KAAKA,CAAA,EAAgB;EAAAC,EAAA;EAC5B,MAAMC,aAAa,GAAGtE,aAAa,CAAC,mBAAmB,CAAC;EACxD,MAAMuE,OAAO,GAAG1D,SAAS,CAAC,CAAC;EAC3B,MAAM2D,UAAU,GAAGnE,YAAY,CAAC8D,WAAW,CAAC;EAC5C,MAAMM,SAAS,GAAGpE,YAAY,CAAC,EAAE,CAAC;EAClC,MAAMqE,iBAAiB,GAAGrE,YAAY,CAAc,IAAI,CAAC;EACzD;;EAEA,MAAMsE,YAAY,GAAIC,CAAgC,IAAK;IACzDH,SAAS,CAACI,GAAG,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EACD,MAAMC,UAAU,GAAIJ,CAAY,IAAK;IACnCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,IAAIP,iBAAiB,CAACQ,GAAG,CAAC,CAAC,EAAE;MAC3BV,UAAU,CAACK,GAAG,CAAEM,SAAS,IACvBA,SAAS,CAACC,GAAG,CAAEC,IAAI,IAAK;QACtB,IAAIA,IAAI,CAACC,EAAE,KAAKZ,iBAAiB,CAACQ,GAAG,CAAC,CAAC,CAACI,EAAE,EAAE;UAC1C,OAAO;YAAE,GAAGD,IAAI;YAAEE,IAAI,EAAEd,SAAS,CAACS,GAAG,CAAC,CAAC,CAACM,IAAI,CAAC;UAAE,CAAC;QAClD;QACA,OAAOH,IAAI;MACb,CAAC,CACH,CAAC;MACDX,iBAAiB,CAACG,GAAG,CAAC,IAAI,CAAC;IAC7B,CAAC,MAAM;MACL,MAAMrB,OAAO,GAAG;QACd8B,EAAE,EAAEG,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACzBJ,IAAI,EAAEd,SAAS,CAACM,KAAK,CAACS,IAAI,CAAC,CAAC;QAC5BI,SAAS,EAAE;MACb,CAAC;MACDpB,UAAU,CAACqB,KAAK,CAAC,CAACrC,OAAO,CAAC,CAAC;IAE7B;IACAiB,SAAS,CAACI,GAAG,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMiB,UAAU,GAAIR,EAAU,IAAK;IACjCd,UAAU,CAACqB,KAAK,CAAEV,SAAiB,IACjCA,SAAS,CAACY,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAC3C,CAAC;EACH,CAAC;EAED,MAAMU,SAAS,GAAIX,IAAU,IAAK;IAChCX,iBAAiB,CAACG,GAAG,CAACQ,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACvBvB,iBAAiB,CAACG,GAAG,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMqB,UAAU,GAAGA,CAACZ,EAAU,EAAEa,WAAmB,KAAK;IACtD3B,UAAU,CAACqB,KAAK,CAAEV,SAAiB,IACjCA,SAAS,CAACC,GAAG,CAAEC,IAAI,IAAK;MACtB,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGD,IAAI;UAAEE,IAAI,EAAEY;QAAY,CAAC;MACvC;MACA,OAAOd,IAAI;IACb,CAAC,CACH,CAAC;EACH,CAAC;EACD,MAAMe,UAAU,GAAId,EAAU,IAAK;IACjCd,UAAU,CAACqB,KAAK,CAAEV,SAAiB,IACjCA,SAAS,CAACC,GAAG,CAAEC,IAAI,IACjBA,IAAI,CAACC,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGD,IAAI;MAAEO,SAAS,EAAE,CAACP,IAAI,CAACO;IAAU,CAAC,GAAGP,IAC7D,CACF,CAAC;EACH,CAAC;EACD,oBACEzE,OAAA,CAACd,KAAK;IAACuG,SAAS,EAAE9B,OAAO,CAACzD,IAAK;IAAAwF,QAAA,eAC7B1F,OAAA,CAACjB,GAAG;MACF4G,SAAS,EAAC,KAAK;MAACF,SAAS,EAAE9B,OAAO,CAAC/C,SAAU;MAAA8E,QAAA,gBAE7C1F,OAAA,CAACd,KAAK;QAAC0G,SAAS,EAAC,QAAQ;QAACH,SAAS,EAAE9B,OAAO,CAACtC,UAAW;QAAAqE,QAAA,gBACtD1F,OAAA,CAAChB,UAAU;UACT6G,OAAO,EAAC,IAAI;UACZJ,SAAS,EAAE9B,OAAO,CAACpC,QAAS;UAAAmE,QAAA,EAAC;QAE/B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbjG,OAAA,CAAChB,UAAU;UACT6G,OAAO,EAAC,WAAW;UACnBJ,SAAS,EAAE9B,OAAO,CAAChC,WAAY;UAAA+D,QAAA,EAAC;QAElC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbjG,OAAA;UACEyF,SAAS,EAAE9B,OAAO,CAAC9B;QAAG;UAAAiE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eAERjG,OAAA,CAACd,KAAK;QACJ0G,SAAS,EAAC,QAAQ;QAClBH,SAAS,EAAE9B,OAAO,CAACpB,QAAS;QAAAmD,QAAA,EAE3B9B,UAAU,CAACO,KAAK,CAAC+B,MAAM,GAAG,CAAC,iBAC1BlG,OAAA,CAAClB,IAAI;UACH+G,OAAO,EAAC,UAAU;UAClBJ,SAAS,EAAE9B,OAAO,CAAC3B,IAAK;UAAA0D,QAAA,eACxB1F,OAAA,CAACX,IAAI;YAAAqG,QAAA,EACF9B,UAAU,CAACO,KAAK,CAACK,GAAG,CAAC,CAACC,IAAU,EAAE0B,KAAa,kBAC9CnG,OAAA,CAACpB,KAAK,CAACwH,QAAQ;cAAAV,QAAA,gBACb1F,OAAA,CAACV,QAAQ;gBAAemG,SAAS,EAAE9B,OAAO,CAACrB,QAAS;gBAAAoD,QAAA,gBAClD1F,OAAA,CAACT,YAAY;kBAAC8G,OAAO,EAAE5B,IAAI,CAACE,IAAK;kBAACc,SAAS,EAAE9B,OAAO,CAACjB,QAAS;kBAAC4D,OAAO,EAAEA,CAAA,KAAMd,UAAU,CAACf,IAAI,CAACC,EAAE,CAAE;kBAAC6B,EAAE,EAAE;oBAAEC,cAAc,EAAE/B,IAAI,CAACO,SAAS,GAAG,cAAc,GAAG;kBAAO;gBAAE;kBAAAc,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnK,CAAC,eACFjG,OAAA,CAACjB,GAAG;kBAACwH,EAAE,EAAE;oBAAExD,WAAW,EAAE;kBAAO,CAAE;kBAAA2C,QAAA,gBAC/B1F,OAAA,CAACb,UAAU;oBAAC,cAAW,MAAM;oBAACmH,OAAO,EAAEA,CAAA,KAAMlB,SAAS,CAACX,IAAI,CAAE;oBAAAiB,QAAA,eAC3D1F,OAAA,CAACL,QAAQ;sBAAC4G,EAAE,EAAE;wBAAEzF,KAAK,EAAE;sBAAQ;oBAAE;sBAAAgF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC1B,CAAC,eACbjG,OAAA,CAACb,UAAU;oBAAC,cAAW,QAAQ;oBAACmH,OAAO,EAAEA,CAAA,KAAMpB,UAAU,CAACT,IAAI,CAACC,EAAE,CAAE;oBAAAgB,QAAA,eACjE1F,OAAA,CAACJ,UAAU;sBAAC2G,EAAE,EAAE;wBAAEzF,KAAK,EAAE;sBAAQ;oBAAE;sBAAAgF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5B,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC;cAAA,GAVOxB,IAAI,CAACC,EAAE;gBAAAoB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAWZ,CAAC,EACVE,KAAK,KAAKvC,UAAU,CAACO,KAAK,CAAC+B,MAAM,GAAG,CAAC,iBACpClG,OAAA,CAACjB,GAAG;gBAACwH,EAAE,EAAE;kBAAEjF,YAAY,EAAE;gBAAM;cAAE;gBAAAwE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA,GAdnBxB,IAAI,CAACC,EAAE;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAiBZ,CACjB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAERjG,OAAA,CAACd,KAAK;QACJ0G,SAAS,EAAC,QAAQ;QAClBH,SAAS,EAAE9B,OAAO,CAACf,OAAQ;QAAA8C,QAAA,gBAE3B1F,OAAA,CAAChB,UAAU;UACT6G,OAAO,EAAC,IAAI;UACZJ,SAAS,EAAE9B,OAAO,CAACX,WAAY;UAAA0C,QAAA,EAAC;QAElC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbjG,OAAA,CAACjB,GAAG;UAAC0G,SAAS,EAAE9B,OAAO,CAACV,aAAc;UAAAyC,QAAA,gBAEpC1F,OAAA,CAACnB,SAAS;YACR4H,KAAK,eACHzG,OAAA,CAAChB,UAAU;cAAC6G,OAAO,EAAC,WAAW;cAACU,EAAE,EAAE;gBAAE7E,UAAU,EAAE;cAAO,CAAE;cAAAgE,QAAA,EAAE;YAE7D;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CACb;YACDJ,OAAO,EAAC,UAAU;YAClBJ,SAAS,EAAE9B,OAAO,CAACR,aAAc;YACjCgB,KAAK,EAAEN,SAAS,CAACM,KAAM;YACvBoC,EAAE,EAAE;cAAEhG,KAAK,EAAEmD,aAAa,GAAG,KAAK,GAAG;YAAO,CAAE;YAC9CgD,QAAQ,EAAE3C;UAAa;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACFjG,OAAA,CAACf,MAAM;YACL4G,OAAO,EAAC,UAAU;YAClBc,IAAI,EAAC,OAAO;YACZJ,EAAE,EAAE;cAAEhG,KAAK,EAAEmD,aAAa,GAAG,MAAM,GAAG;YAAO,CAAE;YAC/C+B,SAAS,EAAE9B,OAAO,CAACN,UAAW;YAC9BuD,QAAQ,EAAE,CAAC/C,SAAS,CAACM,KAAM;YAC3BmC,OAAO,EAAElC,UAAW;YAAAsB,QAAA,EACrB;UAED;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAERjG,OAAA,CAACF,SAAS;QACR+G,YAAY,EAAE/C,iBAAiB,CAACK,KAAM;QACtC2C,gBAAgB,EAAEzB,UAAW;QAC7B0B,gBAAgB,EAAEzB;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb;AAACxC,EAAA,CAtKQD,KAAK;EAAA,QACUpE,aAAa,EACnBa,SAAS,EACNR,YAAY,EACbA,YAAY,EACJA,YAAY;AAAA;AAAAuH,EAAA,GAL/BxD,KAAK;AAwKd,eAAeA,KAAK;AACpB;AAAA,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}