{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { all, fork } from \"redux-saga/effects\";\nimport { postReducer } from \"./post/reducers\";\nimport postSaga from \"./post/sagas\";\n\n// The top-level state object\n\nexport const rootReducer = combineReducers({\n  post: postReducer\n});\nexport function* rootSaga() {\n  yield all([fork(postSaga)]);\n}","map":{"version":3,"names":["combineReducers","all","fork","postReducer","postSaga","rootReducer","post","rootSaga"],"sources":["/home/mergestack/todoapp/src/state/ducks/index.ts"],"sourcesContent":["import { combineReducers } from \"redux\";\nimport { all, fork } from \"redux-saga/effects\";\nimport {\n\tAction,\n\tMetaAction,\n\tPayloadAction,\n\tTypeConstant\n} from \"typesafe-actions\";\nimport { postReducer } from \"./post/reducers\";\nimport postSaga from \"./post/sagas\";\nimport { IPostState } from \"./post/types\";\n// The top-level state object\nexport interface IApplicationState {\n\tpost: IPostState;\n}\nexport interface IMetaAction extends MetaAction<TypeConstant, IMeta> {}\nexport interface IReducerAction<TPayload>\n\textends Action<TypeConstant>,\n\t\tPayloadAction<TypeConstant, TPayload> {}\nexport const rootReducer = combineReducers<IApplicationState>({\n\tpost: postReducer\n});\nexport function* rootSaga() {\n\tyield all([fork(postSaga)]);\n}\ninterface IMeta {\n\tmethod: string;\n\troute: string;\n}"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,IAAI,QAAQ,oBAAoB;AAO9C,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,OAAOC,QAAQ,MAAM,cAAc;;AAEnC;;AAQA,OAAO,MAAMC,WAAW,GAAGL,eAAe,CAAoB;EAC7DM,IAAI,EAAEH;AACP,CAAC,CAAC;AACF,OAAO,UAAUI,QAAQA,CAAA,EAAG;EAC3B,MAAMN,GAAG,CAAC,CAACC,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}