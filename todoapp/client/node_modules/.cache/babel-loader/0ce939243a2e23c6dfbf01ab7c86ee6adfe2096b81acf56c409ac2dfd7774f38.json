{"ast":null,"code":"var _jsxFileName = \"/home/mergestack/todoapp/src/containers/TodoContainer.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crudAPI } from \"components/Constants\";\nimport { addTodo, toggleTodo, deleteTodo, fetchTodosRequest, fetchTodosSuccess, fetchTodosFailure } from \"state/todos/TodoActions\";\nimport Todos from \"components/Todo\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodosContainer = () => {\n  _s();\n  const dispatch = useDispatch();\n  const todos = useSelector(state => state.todo.todos);\n  useEffect(() => {\n    dispatch(fetchTodosRequest());\n    fetchTodos();\n  }, [dispatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get(crudAPI);\n      const todos = response.data;\n      dispatch(fetchTodosSuccess(todos));\n    } catch (error) {\n      console.error(error);\n      dispatch(fetchTodosFailure(error.message));\n    }\n  };\n  const handleAddTodo = async text => {\n    const newTodo = {\n      text,\n      completed: false\n    };\n    try {\n      const response = await axios.post(crudAPI, newTodo);\n      const createdTodo = response.data;\n      dispatch(addTodo(createdTodo._id, createdTodo.text));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleDeleteTodo = async id => {\n    dispatch(deleteTodo(id));\n  };\n  const handleToggleTodo = async id => {\n    dispatch(toggleTodo(id));\n  };\n  return /*#__PURE__*/_jsxDEV(Todos, {\n    todos: todos,\n    onAddTodo: handleAddTodo,\n    onDeleteTodo: handleDeleteTodo,\n    onToggleTodo: handleToggleTodo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(TodosContainer, \"o7Q03MspXWTyThwxSzUb4/gicZ0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TodosContainer;\nexport default TodosContainer;\nvar _c;\n$RefreshReg$(_c, \"TodosContainer\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","crudAPI","addTodo","toggleTodo","deleteTodo","fetchTodosRequest","fetchTodosSuccess","fetchTodosFailure","Todos","axios","jsxDEV","_jsxDEV","TodosContainer","_s","dispatch","todos","state","todo","fetchTodos","response","get","data","error","console","message","handleAddTodo","text","newTodo","completed","post","createdTodo","_id","handleDeleteTodo","id","handleToggleTodo","onAddTodo","onDeleteTodo","onToggleTodo","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mergestack/todoapp/src/containers/TodoContainer.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState, crudAPI, Todo } from \"components/Constants\";\nimport {\n  addTodo,\n  toggleTodo,\n  deleteTodo,\n  fetchTodosRequest,\n  fetchTodosSuccess,\n  fetchTodosFailure,\n} from \"state/todos/TodoActions\";\nimport Todos from \"components/Todo\";\nimport axios from \"axios\";\n\nconst TodosContainer = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector((state: RootState) => state.todo.todos);\n\n  useEffect(() => {\n    dispatch(fetchTodosRequest());\n    fetchTodos();\n  }, [dispatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get(crudAPI);\n      const todos = response.data;\n      dispatch(fetchTodosSuccess(todos));\n    } catch (error: any) {\n      console.error(error);\n      dispatch(fetchTodosFailure(error.message));\n    }\n  };\n\n  const handleAddTodo = async (text: string) => {\n    const newTodo = {\n      text,\n      completed: false,\n    };\n    try {\n      const response = await axios.post(crudAPI, newTodo);\n      const createdTodo = response.data;\n      dispatch(addTodo(createdTodo._id, createdTodo.text));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDeleteTodo = async (id: string) => {\n    dispatch(deleteTodo(id));\n\n  };\n\n  const handleToggleTodo = async (id: string) => {\n    dispatch(toggleTodo(id));\n  };\n\n  return (\n    <Todos\n      todos={todos}\n      onAddTodo={handleAddTodo}\n      onDeleteTodo={handleDeleteTodo}\n      onToggleTodo={handleToggleTodo}\n    />\n  );\n};\n\nexport default TodosContainer;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAAoBC,OAAO,QAAc,sBAAsB;AAC/D,SACEC,OAAO,EACPC,UAAU,EACVC,UAAU,EACVC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAiB,QACZ,yBAAyB;AAChC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,KAAK,GAAGf,WAAW,CAAEgB,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;EAEjEjB,SAAS,CAAC,MAAM;IACdgB,QAAQ,CAACT,iBAAiB,CAAC,CAAC,CAAC;IAC7Ba,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACnB,OAAO,CAAC;MACzC,MAAMc,KAAK,GAAGI,QAAQ,CAACE,IAAI;MAC3BP,QAAQ,CAACR,iBAAiB,CAACS,KAAK,CAAC,CAAC;IACpC,CAAC,CAAC,OAAOO,KAAU,EAAE;MACnBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBR,QAAQ,CAACP,iBAAiB,CAACe,KAAK,CAACE,OAAO,CAAC,CAAC;IAC5C;EACF,CAAC;EAED,MAAMC,aAAa,GAAG,MAAOC,IAAY,IAAK;IAC5C,MAAMC,OAAO,GAAG;MACdD,IAAI;MACJE,SAAS,EAAE;IACb,CAAC;IACD,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMV,KAAK,CAACoB,IAAI,CAAC5B,OAAO,EAAE0B,OAAO,CAAC;MACnD,MAAMG,WAAW,GAAGX,QAAQ,CAACE,IAAI;MACjCP,QAAQ,CAACZ,OAAO,CAAC4B,WAAW,CAACC,GAAG,EAAED,WAAW,CAACJ,IAAI,CAAC,CAAC;IACtD,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMU,gBAAgB,GAAG,MAAOC,EAAU,IAAK;IAC7CnB,QAAQ,CAACV,UAAU,CAAC6B,EAAE,CAAC,CAAC;EAE1B,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOD,EAAU,IAAK;IAC7CnB,QAAQ,CAACX,UAAU,CAAC8B,EAAE,CAAC,CAAC;EAC1B,CAAC;EAED,oBACEtB,OAAA,CAACH,KAAK;IACJO,KAAK,EAAEA,KAAM;IACboB,SAAS,EAAEV,aAAc;IACzBW,YAAY,EAAEJ,gBAAiB;IAC/BK,YAAY,EAAEH;EAAiB;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEN,CAAC;AAAC5B,EAAA,CAnDID,cAAc;EAAA,QACDb,WAAW,EACdC,WAAW;AAAA;AAAA0C,EAAA,GAFrB9B,cAAc;AAqDpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}